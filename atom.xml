<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zyh&#39;s blog</title>
  
  
  <link href="https://strangersinsist.github.io/atom.xml" rel="self"/>
  
  <link href="https://strangersinsist.github.io/"/>
  <updated>2024-09-25T13:55:24.985Z</updated>
  <id>https://strangersinsist.github.io/</id>
  
  <author>
    <name>zyh</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>docker学习笔记</title>
    <link href="https://strangersinsist.github.io/2024/09/25/docker%E5%AD%A6%E4%B9%A0/"/>
    <id>https://strangersinsist.github.io/2024/09/25/docker%E5%AD%A6%E4%B9%A0/</id>
    <published>2024-09-24T16:49:41.491Z</published>
    <updated>2024-09-25T13:55:24.985Z</updated>
    
    <content type="html"><![CDATA[<p>小白的docker学习全过程</p><span id="more"></span><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><ol><li><a href="https://www.bilibili.com/video/BV1HP4118797/">黑马程序员Docker快速入门到项目部署，MySQL部署+Nginx部署+docker自定义镜像+DockerCompose项目实战一套搞定_哔哩哔哩_bilibili</a></li><li><a href="https://docker-practice.github.io/zh-cn/install/ubuntu.html">Ubuntu · Docker – 从入门到实践 (docker-practice.github.io)</a></li><li><a href="https://www.runoob.com/docker/docker-tutorial.html">Docker 教程 | 菜鸟教程 (runoob.com)</a></li></ol><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><ol><li>开源的应用容器引擎，基于 GO 语言</li><li>可以让开发者打包应用以及依赖报到一个轻量级可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。</li></ol><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><ul><li>镜像 image ，相当于一个 root 文件系统</li><li>容器 container ,镜像是静态的定义，容器是镜像运行时的实体，容器可以被创建，启动，停止，删除，暂停等等。</li><li>仓库 respository，一个代码控制中心，用来保存镜像,目前 Docker 官方维护了一个公共仓库 <a href="https://hub.docker.com/">Docker Hub</a>。大部分需求都可以通过在 Docker Hub 中直接下载镜像来实现。</li><li>Dockerfile ,一个文本文件，包含了构建 Docker 镜像的所有指令。<a href="https://www.runoob.com/docker/docker-dockerfile.html">Docker Dockerfile | 菜鸟教程 (runoob.com)</a></li><li>Docker Compose, Compose 是用于定义和运行多容器 Docker 应用程序的工具。通过Compose，可以使用 YML 文件来配置应用程序需要的所有服务。然后，使用一个命令，就可以从 YML 文件配置中创建并启动所有服务。<a href="https://www.runoob.com/docker/docker-compose.html">Docker Compose | 菜鸟教程 (runoob.com)</a></li><li>Swarm 集群管理，<a href="https://www.runoob.com/docker/docker-swarm.html">Swarm 集群管理 | 菜鸟教程 (runoob.com)</a></li></ul><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\zhuyu&gt; wsl --list --verbose</span><br><span class="line">  NAME      STATE           VERSION</span><br><span class="line">* Ubuntu    Running         2</span><br><span class="line">PS C:\Users\zhuyu&gt; wsl</span><br><span class="line">Welcome to fish, the friendly interactive shell</span><br><span class="line">Type help for instructions on how to use fish</span><br><span class="line">zyh@QAQ /m/c/U/zhuyu&gt; neofetch</span><br><span class="line">            .-/+oossssoo+/-.               zyh@QAQ</span><br><span class="line">        `:+ssssssssssssssssss+:`           -------</span><br><span class="line">      -+ssssssssssssssssssyyssss+-         OS: Ubuntu 22.04.3 LTS on Windows 10 x86_64</span><br><span class="line">    .ossssssssssssssssssdMMMNysssso.       Kernel: 5.15.153.1-microsoft-standard-WSL2</span><br><span class="line">   /ssssssssssshdmmNNmmyNMMMMhssssss/      Uptime: 5 mins</span><br><span class="line">  +ssssssssshmydMMMMMMMNddddyssssssss+     Packages: 521 (dpkg), 6 (snap)</span><br><span class="line"> /sssssssshNMMMyhhyyyyhmNMMMNhssssssss/    Shell: fish 3.3.1</span><br><span class="line">.ssssssssdMMMNhsssssssssshNMMMdssssssss.   Terminal: Windows Terminal</span><br><span class="line">+sssshhhyNMMNyssssssssssssyNMMMysssssss+   CPU: 11th Gen Intel i5-1135G7 (8) @ 2.419GHz</span><br><span class="line">ossyNMMMNyMMhsssssssssssssshmmmhssssssso   GPU: 613e:00:00.0 Microsoft Corporation Device 008e</span><br><span class="line">ossyNMMMNyMMhsssssssssssssshmmmhssssssso   Memory: 525MiB / 7808MiB</span><br><span class="line">+sssshhhyNMMNyssssssssssssyNMMMysssssss+</span><br><span class="line">.ssssssssdMMMNhsssssssssshNMMMdssssssss.</span><br><span class="line"> /sssssssshNMMMyhhyyyyhdNMMMNhssssssss/</span><br><span class="line">  +sssssssssdmydMMMMMMMMddddyssssssss+</span><br><span class="line">   /ssssssssssshdmNNNNmyNMMMMhssssss/</span><br><span class="line">    .ossssssssssssssssssdMMMNysssso.</span><br><span class="line">      -+sssssssssssssssssyyyssss+-</span><br><span class="line">        `:+ssssssssssssssssss+:`</span><br><span class="line">            .-/+oossssoo+/-.</span><br><span class="line"></span><br><span class="line">zyh@QAQ /m/c/U/zhuyu&gt;                 </span><br></pre></td></tr></table></figure><h3 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h3><p><strong>检查 WSL 安装状态</strong>：<code>wsl --list --verbose</code><br><strong>进入 WSL</strong>：<code>wsl</code><br><strong>展示系统信息</strong>： <code>neofetch</code> 是一个命令行工具，用于显示系统信息和操作系统的 ASCII 艺术图案。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>我按照这个教程来的：<a href="https://docker-practice.github.io/zh-cn/install/ubuntu.html">Ubuntu · Docker – 从入门到实践 (docker-practice.github.io)</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br></pre></td><td class="code"><pre><span class="line">Welcome to fish, the friendly interactive shell</span><br><span class="line">Type help for instructions on how to use fish</span><br><span class="line">zyh@QAQ ~&gt; $ sudo apt-get update</span><br><span class="line">fish: Expected a variable name after this $.</span><br><span class="line">zyh@QAQ ~&gt; $ sudo apt-get update</span><br><span class="line">fish: Expected a variable name after this $.</span><br><span class="line">zyh@QAQ ~&gt; sudo apt-get update</span><br><span class="line">[sudo] password for zyh:</span><br><span class="line">Hit:1 http://mirrors.matrix.moe/ubuntu jammy InRelease</span><br><span class="line">Get:2 http://mirrors.matrix.moe/ubuntu jammy-updates InRelease [128 kB]</span><br><span class="line">Get:3 http://mirrors.matrix.moe/ubuntu jammy-backports InRelease [127 kB]</span><br><span class="line">Get:4 http://mirrors.matrix.moe/ubuntu jammy-security InRelease [129 kB]</span><br><span class="line">Get:5 http://mirrors.matrix.moe/ubuntu jammy-updates/main amd64 Packages [2058 kB]</span><br><span class="line">Get:6 http://mirrors.matrix.moe/ubuntu jammy-updates/main Translation-en [355 kB]</span><br><span class="line">Get:7 http://mirrors.matrix.moe/ubuntu jammy-updates/main amd64 c-n-f Metadata [17.8 kB]</span><br><span class="line">Get:8 http://mirrors.matrix.moe/ubuntu jammy-updates/restricted amd64 Packages [2495 kB]</span><br><span class="line">Get:9 http://mirrors.matrix.moe/ubuntu jammy-updates/restricted Translation-en [429 kB]</span><br><span class="line">Get:10 http://mirrors.matrix.moe/ubuntu jammy-updates/universe amd64 Packages [1124 kB]</span><br><span class="line">Get:11 http://mirrors.matrix.moe/ubuntu jammy-updates/universe Translation-en [261 kB]</span><br><span class="line">Get:12 http://mirrors.matrix.moe/ubuntu jammy-updates/universe amd64 c-n-f Metadata [26.1 kB]</span><br><span class="line">Get:13 http://mirrors.matrix.moe/ubuntu jammy-backports/universe amd64 Packages [28.8 kB]</span><br><span class="line">Get:14 http://mirrors.matrix.moe/ubuntu jammy-backports/universe amd64 c-n-f Metadata [672 B]</span><br><span class="line">Get:15 http://mirrors.matrix.moe/ubuntu jammy-security/main amd64 Packages [1839 kB]</span><br><span class="line">Get:16 http://mirrors.matrix.moe/ubuntu jammy-security/main Translation-en [298 kB]</span><br><span class="line">Get:17 http://mirrors.matrix.moe/ubuntu jammy-security/main amd64 c-n-f Metadata [13.3 kB]</span><br><span class="line">Get:18 http://mirrors.matrix.moe/ubuntu jammy-security/restricted amd64 Packages [2431 kB]</span><br><span class="line">Get:19 http://mirrors.matrix.moe/ubuntu jammy-security/restricted Translation-en [418 kB]</span><br><span class="line">Get:20 http://mirrors.matrix.moe/ubuntu jammy-security/universe amd64 Packages [903 kB]</span><br><span class="line">Get:21 http://mirrors.matrix.moe/ubuntu jammy-security/universe Translation-en [177 kB]</span><br><span class="line">Get:22 http://mirrors.matrix.moe/ubuntu jammy-security/universe amd64 c-n-f Metadata [19.3 kB]</span><br><span class="line">Fetched 13.3 MB in 5s (2688 kB/s)</span><br><span class="line">Reading package lists... Done</span><br><span class="line">zyh@QAQ ~&gt; sudo apt-get install \</span><br><span class="line">                   apt-transport-https \</span><br><span class="line">                   ca-certificates \</span><br><span class="line">                   curl \</span><br><span class="line">                   gnupg \</span><br><span class="line">                   lsb-release</span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree... Done</span><br><span class="line">Reading state information... Done</span><br><span class="line">lsb-release is already the newest version (11.1.0ubuntu4).</span><br><span class="line">lsb-release set to manually installed.</span><br><span class="line">ca-certificates is already the newest version (20230311ubuntu0.22.04.1).</span><br><span class="line">ca-certificates set to manually installed.</span><br><span class="line">gnupg is already the newest version (2.2.27-3ubuntu2.1).</span><br><span class="line">gnupg set to manually installed.</span><br><span class="line">The following additional packages will be installed:</span><br><span class="line">  libcurl4</span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">  apt-transport-https</span><br><span class="line">The following packages will be upgraded:</span><br><span class="line">  curl libcurl4</span><br><span class="line">2 upgraded, 1 newly installed, 0 to remove and 144 not upgraded.</span><br><span class="line">Need to get 485 kB of archives.</span><br><span class="line">After this operation, 172 kB of additional disk space will be used.</span><br><span class="line">Do you want to continue? [Y/n] y</span><br><span class="line">Get:1 http://mirrors.matrix.moe/ubuntu jammy-updates/universe amd64 apt-transport-https all 2.4.13 [1510 B]</span><br><span class="line">Get:2 http://mirrors.matrix.moe/ubuntu jammy-updates/main amd64 curl amd64 7.81.0-1ubuntu1.18 [194 kB]</span><br><span class="line">Get:3 http://mirrors.matrix.moe/ubuntu jammy-updates/main amd64 libcurl4 amd64 7.81.0-1ubuntu1.18 [289 kB]</span><br><span class="line">Fetched 485 kB in 0s (1154 kB/s)</span><br><span class="line">Selecting previously unselected package apt-transport-https.</span><br><span class="line">(Reading database ... 28748 files and directories currently installed.)</span><br><span class="line">Preparing to unpack .../apt-transport-https_2.4.13_all.deb ...</span><br><span class="line">Unpacking apt-transport-https (2.4.13) ...</span><br><span class="line">Preparing to unpack .../curl_7.81.0-1ubuntu1.18_amd64.deb ...</span><br><span class="line">Unpacking curl (7.81.0-1ubuntu1.18) over (7.81.0-1ubuntu1.14) ...</span><br><span class="line">Preparing to unpack .../libcurl4_7.81.0-1ubuntu1.18_amd64.deb ...</span><br><span class="line">Unpacking libcurl4:amd64 (7.81.0-1ubuntu1.18) over (7.81.0-1ubuntu1.14) ...</span><br><span class="line">Setting up apt-transport-https (2.4.13) ...</span><br><span class="line">Setting up libcurl4:amd64 (7.81.0-1ubuntu1.18) ...</span><br><span class="line">Setting up curl (7.81.0-1ubuntu1.18) ...</span><br><span class="line">Processing triggers for man-db (2.10.2-1) ...</span><br><span class="line">Processing triggers for libc-bin (2.35-0ubuntu3.4) ...</span><br><span class="line">zyh@QAQ ~&gt; curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/</span><br><span class="line">docker-archive-keyring.gpg</span><br><span class="line">zyh@QAQ ~&gt; echo \</span><br><span class="line">                 &quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirrors.aliyun.com/docker-ce/linux/ubuntu \</span><br><span class="line">             $(lsb_release -cs) stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line"></span><br><span class="line">fish: $(...) is not supported. In fish, please use &#x27;(lsb_release)&#x27;.</span><br><span class="line"><span class="meta prompt_">  $</span><span class="language-bash">(lsb_release -cs) stable<span class="string">&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span></span></span><br><span class="line">^</span><br><span class="line">zyh@QAQ ~&gt; echo \</span><br><span class="line">                 &quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirrors.aliyun.com/d</span><br><span class="line">ocker-ce/linux/ubuntu \</span><br><span class="line">             $(lsb_release -cs) stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line"></span><br><span class="line">fish: $(...) is not supported. In fish, please use &#x27;(lsb_release)&#x27;.</span><br><span class="line"><span class="meta prompt_">  $</span><span class="language-bash"><span class="string">(lsb_release -cs) stable&quot;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null</span></span><br><span class="line">^</span><br><span class="line">zyh@QAQ ~&gt; echo \</span><br><span class="line">                 &quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirrors.aliyun.com/d</span><br><span class="line">ocker-ce/linux/ubuntu \</span><br><span class="line">             $(lsb_release -cs) stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line">           echo \</span><br><span class="line">                 &quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirrors.aliyun.com/d</span><br><span class="line">ocker-ce/linux/ubuntu \</span><br><span class="line">             (lsb_release -cs) stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line"></span><br><span class="line">fish: $(...) is not supported. In fish, please use &#x27;(lsb_release)&#x27;.</span><br><span class="line"><span class="meta prompt_">  $</span><span class="language-bash">(lsb_release -cs) stable<span class="string">&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span></span></span><br><span class="line">^</span><br><span class="line">zyh@QAQ ~&gt; echo \</span><br><span class="line">                 &quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirrors.aliyun.com/d</span><br><span class="line">ocker-ce/linux/ubuntu \</span><br><span class="line">             $(lsb_release -cs) stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line">           echo \</span><br><span class="line">                 &quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirrors.aliyun.com/d</span><br><span class="line">ocker-ce/linux/ubuntu \</span><br><span class="line">             (lsb_release -cs) stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line">           ^C</span><br><span class="line">zyh@QAQ ~&gt; echo \</span><br><span class="line">                 &quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirrors.aliyun.com/d</span><br><span class="line">ocker-ce/linux/ubuntu \</span><br><span class="line">             (lsb_release -cs) stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line"></span><br><span class="line">zyh@QAQ ~&gt; sudo apt-get update</span><br><span class="line">Hit:1 http://mirrors.matrix.moe/ubuntu jammy InRelease</span><br><span class="line">Hit:2 http://mirrors.matrix.moe/ubuntu jammy-updates InRelease</span><br><span class="line">Hit:3 http://mirrors.matrix.moe/ubuntu jammy-backports InRelease</span><br><span class="line">Hit:4 http://mirrors.matrix.moe/ubuntu jammy-security InRelease</span><br><span class="line">Ign:5 https://mirrors.aliyun.com/docker-ce/linux/ubuntu (lsb_release InRelease</span><br><span class="line">Err:6 https://mirrors.aliyun.com/docker-ce/linux/ubuntu (lsb_release Release</span><br><span class="line">  404  Not Found [IP: 36.250.255.105 443]</span><br><span class="line">Reading package lists... Done</span><br><span class="line">E: The repository &#x27;https://mirrors.aliyun.com/docker-ce/linux/ubuntu (lsb_release Release&#x27; does not have a Release file.</span><br><span class="line">N: Updating from such a repository can&#x27;t be done securely, and is therefore disabled by default.</span><br><span class="line">N: See apt-secure(8) manpage for repository creation and user configuration details.</span><br><span class="line">zyh@QAQ ~ [100]&gt; lsb_release -cs</span><br><span class="line">jammy</span><br><span class="line">zyh@QAQ ~&gt; deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirrors.aliyun.com/docker-c</span><br><span class="line">e/linux/ubuntu jammy stable</span><br><span class="line">Command &#x27;deb&#x27; not found, did you mean:</span><br><span class="line">  command &#x27;dub&#x27; from snap dub (1.19.0)</span><br><span class="line">  command &#x27;den&#x27; from snap den (1.2.0-0)</span><br><span class="line">  command &#x27;dub&#x27; from deb dub (1.27.0-2)</span><br><span class="line">  command &#x27;dcb&#x27; from deb iproute2 (5.15.0-1ubuntu2)</span><br><span class="line">  command &#x27;dab&#x27; from deb bsdgames (2.17-29)</span><br><span class="line">  command &#x27;dex&#x27; from deb dex (0.9.0-1)</span><br><span class="line">  command &#x27;debc&#x27; from deb devscripts (2.22.1ubuntu1)</span><br><span class="line">  command &#x27;edb&#x27; from deb edb-debugger (1.3.0-1)</span><br><span class="line">  command &#x27;deb3&#x27; from deb quilt (0.66-2.1)</span><br><span class="line">  command &#x27;debi&#x27; from deb devscripts (2.22.1ubuntu1)</span><br><span class="line">  command &#x27;derb&#x27; from deb icu-devtools (70.1-2)</span><br><span class="line">See &#x27;snap info &lt;snapname&gt;&#x27; for additional versions.</span><br><span class="line">zyh@QAQ ~ [127]&gt; echo &quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirrors.aliyun.</span><br><span class="line">com/docker-ce/linux/ubuntu jammy stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line">zyh@QAQ ~&gt; sudo apt-get update</span><br><span class="line">Hit:1 http://mirrors.matrix.moe/ubuntu jammy InRelease</span><br><span class="line">Hit:2 http://mirrors.matrix.moe/ubuntu jammy-updates InRelease</span><br><span class="line">Hit:3 http://mirrors.matrix.moe/ubuntu jammy-backports InRelease</span><br><span class="line">Hit:4 http://mirrors.matrix.moe/ubuntu jammy-security InRelease</span><br><span class="line">Get:5 https://mirrors.aliyun.com/docker-ce/linux/ubuntu jammy InRelease [48.8 kB]</span><br><span class="line">Get:6 https://mirrors.aliyun.com/docker-ce/linux/ubuntu jammy/stable amd64 Packages [39.3 kB]</span><br><span class="line">Fetched 88.2 kB in 1s (122 kB/s)</span><br><span class="line">Reading package lists... Done</span><br><span class="line">zyh@QAQ ~&gt; sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin</span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree... Done</span><br><span class="line">Reading state information... Done</span><br><span class="line">The following additional packages will be installed:</span><br><span class="line">  dbus-user-session docker-buildx-plugin docker-ce-rootless-extras libslirp0 pigz slirp4netns</span><br><span class="line">Suggested packages:</span><br><span class="line">  aufs-tools cgroupfs-mount | cgroup-lite</span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">  containerd.io dbus-user-session docker-buildx-plugin docker-ce docker-ce-cli docker-ce-rootless-extras</span><br><span class="line">  docker-compose-plugin libslirp0 pigz slirp4netns</span><br><span class="line">0 upgraded, 10 newly installed, 0 to remove and 144 not upgraded.</span><br><span class="line">Need to get 122 MB of archives.</span><br><span class="line">After this operation, 440 MB of additional disk space will be used.</span><br><span class="line">Do you want to continue? [Y/n] y</span><br><span class="line">Get:1 https://mirrors.aliyun.com/docker-ce/linux/ubuntu jammy/stable amd64 containerd.io amd64 1.7.22-1 [29.5 MB]</span><br><span class="line">Get:2 http://mirrors.matrix.moe/ubuntu jammy/universe amd64 pigz amd64 2.6-1 [63.6 kB]</span><br><span class="line">Get:3 http://mirrors.matrix.moe/ubuntu jammy-updates/main amd64 dbus-user-session amd64 1.12.20-2ubuntu4.1 [9442 B]</span><br><span class="line">Get:4 http://mirrors.matrix.moe/ubuntu jammy/main amd64 libslirp0 amd64 4.6.1-1build1 [61.5 kB]</span><br><span class="line">Get:5 http://mirrors.matrix.moe/ubuntu jammy/universe amd64 slirp4netns amd64 1.0.1-2 [28.2 kB]</span><br><span class="line">Get:6 https://mirrors.aliyun.com/docker-ce/linux/ubuntu jammy/stable amd64 docker-buildx-plugin amd64 0.16.2-1~ubuntu.22.04~jammy [29.9 MB]</span><br><span class="line">Get:7 https://mirrors.aliyun.com/docker-ce/linux/ubuntu jammy/stable amd64 docker-ce-cli amd64 5:27.2.1-1~ubuntu.22.04~jammy [15.0 MB]</span><br><span class="line">Get:8 https://mirrors.aliyun.com/docker-ce/linux/ubuntu jammy/stable amd64 docker-ce amd64 5:27.2.1-1~ubuntu.22.04~jammy [25.6 MB]</span><br><span class="line">Get:9 https://mirrors.aliyun.com/docker-ce/linux/ubuntu jammy/stable amd64 docker-ce-rootless-extras amd64 5:27.2.1-1~ubuntu.22.04~jammy [9572 kB]</span><br><span class="line">Get:10 https://mirrors.aliyun.com/docker-ce/linux/ubuntu jammy/stable amd64 docker-compose-plugin amd64 2.29.2-1~ubuntu.22.04~jammy [12.5 MB]</span><br><span class="line">Fetched 122 MB in 1min 7s (1832 kB/s)</span><br><span class="line">Selecting previously unselected package pigz.</span><br><span class="line">(Reading database ... 28752 files and directories currently installed.)</span><br><span class="line">Preparing to unpack .../0-pigz_2.6-1_amd64.deb ...</span><br><span class="line">Unpacking pigz (2.6-1) ...</span><br><span class="line">Selecting previously unselected package containerd.io.</span><br><span class="line">Preparing to unpack .../1-containerd.io_1.7.22-1_amd64.deb ...</span><br><span class="line">Unpacking containerd.io (1.7.22-1) ...</span><br><span class="line">Selecting previously unselected package dbus-user-session.</span><br><span class="line">Preparing to unpack .../2-dbus-user-session_1.12.20-2ubuntu4.1_amd64.deb ...</span><br><span class="line">Unpacking dbus-user-session (1.12.20-2ubuntu4.1) ...</span><br><span class="line">Selecting previously unselected package docker-buildx-plugin.</span><br><span class="line">Preparing to unpack .../3-docker-buildx-plugin_0.16.2-1~ubuntu.22.04~jammy_amd64.deb ...</span><br><span class="line">Unpacking docker-buildx-plugin (0.16.2-1~ubuntu.22.04~jammy) ...</span><br><span class="line">Selecting previously unselected package docker-ce-cli.</span><br><span class="line">Preparing to unpack .../4-docker-ce-cli_5%3a27.2.1-1~ubuntu.22.04~jammy_amd64.deb ...</span><br><span class="line">Unpacking docker-ce-cli (5:27.2.1-1~ubuntu.22.04~jammy) ...</span><br><span class="line">Selecting previously unselected package docker-ce.</span><br><span class="line">Preparing to unpack .../5-docker-ce_5%3a27.2.1-1~ubuntu.22.04~jammy_amd64.deb ...</span><br><span class="line">Unpacking docker-ce (5:27.2.1-1~ubuntu.22.04~jammy) ...</span><br><span class="line">Selecting previously unselected package docker-ce-rootless-extras.</span><br><span class="line">Preparing to unpack .../6-docker-ce-rootless-extras_5%3a27.2.1-1~ubuntu.22.04~jammy_amd64.deb ...</span><br><span class="line">Unpacking docker-ce-rootless-extras (5:27.2.1-1~ubuntu.22.04~jammy) ...</span><br><span class="line">Selecting previously unselected package docker-compose-plugin.</span><br><span class="line">Preparing to unpack .../7-docker-compose-plugin_2.29.2-1~ubuntu.22.04~jammy_amd64.deb ...</span><br><span class="line">Unpacking docker-compose-plugin (2.29.2-1~ubuntu.22.04~jammy) ...</span><br><span class="line">Selecting previously unselected package libslirp0:amd64.</span><br><span class="line">Preparing to unpack .../8-libslirp0_4.6.1-1build1_amd64.deb ...</span><br><span class="line">Unpacking libslirp0:amd64 (4.6.1-1build1) ...</span><br><span class="line">Selecting previously unselected package slirp4netns.</span><br><span class="line">Preparing to unpack .../9-slirp4netns_1.0.1-2_amd64.deb ...</span><br><span class="line">Unpacking slirp4netns (1.0.1-2) ...</span><br><span class="line">Setting up dbus-user-session (1.12.20-2ubuntu4.1) ...</span><br><span class="line">Setting up docker-buildx-plugin (0.16.2-1~ubuntu.22.04~jammy) ...</span><br><span class="line">Setting up containerd.io (1.7.22-1) ...</span><br><span class="line">Created symlink /etc/systemd/system/multi-user.target.wants/containerd.service → /lib/systemd/system/containerd.service.</span><br><span class="line">Setting up docker-compose-plugin (2.29.2-1~ubuntu.22.04~jammy) ...</span><br><span class="line">Setting up docker-ce-cli (5:27.2.1-1~ubuntu.22.04~jammy) ...</span><br><span class="line">Setting up libslirp0:amd64 (4.6.1-1build1) ...</span><br><span class="line">Setting up pigz (2.6-1) ...</span><br><span class="line">Setting up docker-ce-rootless-extras (5:27.2.1-1~ubuntu.22.04~jammy) ...</span><br><span class="line">Setting up slirp4netns (1.0.1-2) ...</span><br><span class="line">Setting up docker-ce (5:27.2.1-1~ubuntu.22.04~jammy) ...</span><br><span class="line">Created symlink /etc/systemd/system/multi-user.target.wants/docker.service → /lib/systemd/system/docker.service.</span><br><span class="line">Created symlink /etc/systemd/system/sockets.target.wants/docker.socket → /lib/systemd/system/docker.socket.</span><br><span class="line">Processing triggers for man-db (2.10.2-1) ...</span><br><span class="line">Processing triggers for libc-bin (2.35-0ubuntu3.4) ...</span><br><span class="line">zyh@QAQ ~&gt; sudo systemctl enable docker</span><br><span class="line">Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.</span><br><span class="line">Executing: /lib/systemd/systemd-sysv-install enable docker</span><br><span class="line">zyh@QAQ ~&gt; sudo systemctl start docker</span><br><span class="line">zyh@QAQ ~&gt; sudo groupadd docker</span><br><span class="line">groupadd: group &#x27;docker&#x27; already exists</span><br><span class="line">zyh@QAQ ~ [9]&gt; docker run --rm hello-world</span><br><span class="line">docker: permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Head &quot;http://%2Fvar%2Frun%2Fdocker.sock/_ping&quot;: dial unix /var/run/docker.sock: connect: permission denied.</span><br><span class="line">See &#x27;docker run --help&#x27;.</span><br><span class="line">zyh@QAQ ~ [126]&gt;               </span><br></pre></td></tr></table></figure><p>解决 <code>Unable to find image &#39;hello-world:latest&#39; locally</code> 的问题。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">Welcome to fish, the friendly interactive shell</span><br><span class="line">Type help for instructions on how to use fish</span><br><span class="line">zyh@QAQ ~&gt; docker run --rm hello-world</span><br><span class="line">Unable to find image &#x27;hello-world:latest&#x27; locally</span><br><span class="line">docker: Error response from daemon: Get &quot;https://registry-1.docker.io/v2/&quot;: context deadline exceeded (Client.Timeout exceeded while awaiting headers).</span><br><span class="line">See &#x27;docker run --help&#x27;.</span><br><span class="line">zyh@QAQ ~ [125]&gt;</span><br><span class="line">                 sudo vim /etc/docker/daemon.json</span><br><span class="line">[sudo] password for zyh:</span><br><span class="line">zyh@QAQ ~&gt;</span><br><span class="line">           sudo systemctl daemon-reload</span><br><span class="line">zyh@QAQ ~&gt; sudo systemctl restart docker</span><br><span class="line">zyh@QAQ ~&gt; docker run --rm hello-world</span><br><span class="line">Unable to find image &#x27;hello-world:latest&#x27; locally</span><br><span class="line">latest: Pulling from library/hello-world</span><br><span class="line">c1ec31eb5944: Pull complete</span><br><span class="line">Digest: sha256:91fb4b041da273d5a3273b6d587d62d518300a6ad268b28628f74997b93171b2</span><br><span class="line">Status: Downloaded newer image for hello-world:latest</span><br><span class="line"></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image which runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, which sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"><span class="meta prompt_"> $ </span><span class="language-bash">docker run -it ubuntu bash</span></span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/get-started/</span><br><span class="line"></span><br><span class="line">zyh@QAQ ~&gt;                           </span><br></pre></td></tr></table></figure><p>使用 <code>daocloud</code> 镜像加速：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [</span><br><span class="line">    &quot;https://docker.m.daocloud.io&quot;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&#96;&#96;</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><ol><li>查看 docker 版本<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker --version</span><br></pre></td></tr></table></figure></li><li>启动 docker 服务<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure></li><li>检查 docker 服务状态<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status docker</span><br></pre></td></tr></table></figure></li><li>运行第一个容器<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure>或者<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm hello-world</span><br></pre></td></tr></table></figure></li><li>拉取镜像<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nginx</span><br></pre></td></tr></table></figure>ps: nginx 是一个高性能的 HTTP 和反向代理 web 服务器</li><li>列出 docker 镜像<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure></li><li>运行容器<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8080:80 nginx</span><br></pre></td></tr></table></figure>会将 <code>nginx</code> 容器的端口 80 投射到宿主机的 8080 端口，可以通过 <code>https://localhost:8080</code> 访问 Nginx 服务。</li><li>列出所有容器<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure></li><li>启动容器<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start XX</span><br></pre></td></tr></table></figure></li><li>停止容器<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop XX</span><br></pre></td></tr></table></figure></li><li>删除容器<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm XX</span><br></pre></td></tr></table></figure></li><li>删除本地镜像<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi XX</span><br></pre></td></tr></table></figure></li><li>查看容器日志<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs XX</span><br></pre></td></tr></table></figure></li><li>进入容器内部<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it XX /bin/sh</span><br></pre></td></tr></table></figure></li></ol><h2 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker compose"></a>docker compose</h2><p>运行以下命令以下载 Docker Compose 的当前稳定版本：<br>将可执行权限应用于二进制文件：<br>创建软链：<br>测试是否安装成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">zyh@QAQ ~ [3]&gt; set os (uname -s)</span><br><span class="line">               set arch (uname -m)</span><br><span class="line">               sudo curl -L &quot;https://github.com/docker/compose/releases/download/v2.2.2/docker-compose-$os-$arch&quot; -o /us</span><br><span class="line">r/local/bin/docker-compose</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">  % </span><span class="language-bash">Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0</span><br><span class="line">100 23.5M  100 23.5M    0     0  55309      0  0:07:25  0:07:25 --:--:-- 47077</span><br><span class="line">zyh@QAQ ~&gt; sudo chmod +x /usr/local/bin/docker-compose</span><br><span class="line">[sudo] password for zyh:</span><br><span class="line">zyh@QAQ ~&gt; sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br><span class="line">zyh@QAQ ~&gt; docker-compose --version</span><br><span class="line">Docker Compose version v2.2.2</span><br></pre></td></tr></table></figure><p>测试：<br>使用一个简单的 <code>docker-compose.yml</code> 文件来运行一个 Nginx 容器。测试步骤：</p><ol><li>创建一个测试文件夹，并进入该文件夹：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> dockercomposetest</span><br><span class="line"><span class="built_in">cd</span> dockercomposetest</span><br></pre></td></tr></table></figure><ol start="2"><li>创建一个 <code>docker-compose.yml</code> 文件：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><p>在文件中粘贴以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx:alpine</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8080:80&quot;</span></span><br></pre></td></tr></table></figure><p>这个文件会使用 <code>nginx:alpine</code> 镜像，并将本地的 <code>8080</code> 端口映射到容器的 <code>80</code> 端口。</p><ol start="3"><li>运行 Docker Compose：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker-compose up</span><br></pre></td></tr></table></figure><p>如果 Docker Compose 正常工作，看到下面的输出，表明 Nginx 容器启动成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">zyh@QAQ ~/dockercomposetest&gt; sudo docker-compose up</span><br><span class="line">[+] Running 9/9</span><br><span class="line"> ⠿ web Pulled                                                                                                                                         30.8s</span><br><span class="line">   ⠿ 43c4264eed91 Pull complete                                                                                                                        2.4s</span><br><span class="line">   ⠿ 5b19511a843d Pull complete                                                                                                                        2.6s</span><br><span class="line">   ⠿ 652d69a25e85 Pull complete                                                                                                                        2.6s</span><br><span class="line">   ⠿ 51676974aef5 Pull complete                                                                                                                        2.7s</span><br><span class="line">   ⠿ bb16f69e8876 Pull complete                                                                                                                        2.7s</span><br><span class="line">   ⠿ 6fb07faa0055 Pull complete                                                                                                                        2.7s</span><br><span class="line">   ⠿ c298c5a0cd21 Pull complete                                                                                                                        4.8s</span><br><span class="line">   ⠿ 0c02f601d0ee Pull complete                                                                                                                       12.0s</span><br><span class="line">[+] Running 2/2</span><br><span class="line"> ⠿ Network dockercomposetest_default  Created                                                                                                          0.2s</span><br><span class="line"> ⠿ Container dockercomposetest-web-1  Created                                                                                                          0.2s</span><br><span class="line">Attaching to dockercomposetest-web-1</span><br><span class="line">dockercomposetest-web-1  | /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration</span><br><span class="line">dockercomposetest-web-1  | /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/</span><br><span class="line">dockercomposetest-web-1  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh</span><br><span class="line">dockercomposetest-web-1  | 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf</span><br><span class="line">dockercomposetest-web-1  | 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf</span><br><span class="line">dockercomposetest-web-1  | /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh</span><br><span class="line">dockercomposetest-web-1  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh</span><br><span class="line">dockercomposetest-web-1  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh</span><br><span class="line">dockercomposetest-web-1  | /docker-entrypoint.sh: Configuration complete; ready for start up</span><br><span class="line">dockercomposetest-web-1  | 2024/09/24 16:43:16 [notice] 1#1: using the &quot;epoll&quot; event method</span><br><span class="line">dockercomposetest-web-1  | 2024/09/24 16:43:16 [notice] 1#1: nginx/1.27.1</span><br><span class="line">dockercomposetest-web-1  | 2024/09/24 16:43:16 [notice] 1#1: built by gcc 13.2.1 20240309 (Alpine 13.2.1_git20240309)</span><br><span class="line">dockercomposetest-web-1  | 2024/09/24 16:43:16 [notice] 1#1: OS: Linux 5.15.153.1-microsoft-standard-WSL2</span><br><span class="line">dockercomposetest-web-1  | 2024/09/24 16:43:16 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576</span><br><span class="line">dockercomposetest-web-1  | 2024/09/24 16:43:16 [notice] 1#1: start worker processes</span><br><span class="line">dockercomposetest-web-1  | 2024/09/24 16:43:16 [notice] 1#1: start worker process 30</span><br><span class="line">dockercomposetest-web-1  | 2024/09/24 16:43:16 [notice] 1#1: start worker process 31</span><br><span class="line">dockercomposetest-web-1  | 2024/09/24 16:43:16 [notice] 1#1: start worker process 32</span><br><span class="line">dockercomposetest-web-1  | 2024/09/24 16:43:16 [notice] 1#1: start worker process 33</span><br><span class="line">dockercomposetest-web-1  | 2024/09/24 16:43:16 [notice] 1#1: start worker process 34</span><br><span class="line">dockercomposetest-web-1  | 2024/09/24 16:43:16 [notice] 1#1: start worker process 35</span><br><span class="line">dockercomposetest-web-1  | 2024/09/24 16:43:16 [notice] 1#1: start worker process 36</span><br><span class="line">dockercomposetest-web-1  | 2024/09/24 16:43:16 [notice] 1#1: start worker process 37</span><br><span class="line">dockercomposetest-web-1  | 172.19.0.1 - - [24/Sep/2024:16:43:39 +0000] &quot;GET / HTTP/1.1&quot; 200 615 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36 Edg/129.0.0.0&quot; &quot;-&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="4"><li><p>打开浏览器并访问 <code>http://localhost:8080</code>，看到 Nginx 的欢迎页面，表明 Docker Compose 运行成功。</p></li><li><p>停止容器，按 <code>Ctrl+C</code>，然后运行以下命令来清理环境：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker-compose down</span><br></pre></td></tr></table></figure><h1 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h1><p>这里以我的项目 <a href="https://gitee.com/AIJavaGroup/project">project: 基于Springboot+Vue的亚健康管理系统 (gitee.com)</a> 为例，将这个 web 项目部署到 docker 中运行。<br>通过Docker容器化的方式，<strong>不需要在本地（Windows或WSL）安装Node.js、MySQL、Java等开发依赖</strong>，这些依赖项完全可以由Docker来管理。Docker容器会为每个服务提供一个独立的运行环境，本地机器不需要直接安装这些服务。只需要安装Docker和Docker Compose工具，剩下的依赖都在Docker中管理。通过Git和Docker Compose，团队成员可以轻松启动、重建和管理开发环境，简化协作流程。</p><h2 id="项目调研"><a href="#项目调研" class="headerlink" title="项目调研"></a>项目调研</h2><h3 id="关键信息"><a href="#关键信息" class="headerlink" title="关键信息"></a>关键信息</h3><p>将一个包含 Vue、Spring Boot 和 MySQL 的项目部署到 Docker 中的过程涉及构建多个 Docker 容器来分别运行前端、后端和数据库。需要考虑以下关键信息：</p><ol><li><p><strong>Vue 项目的打包配置</strong>：</p><ul><li>Vue 项目是否已经通过 <code>npm run build</code> 或者 <code>yarn build</code> 进行生产环境打包？</li><li>是否有 Dockerfile 或现成的部署脚本？</li></ul></li><li><p><strong>Spring Boot 应用的构建方式</strong>：</p><ul><li>Spring Boot 项目是否使用 Maven 或 Gradle 进行构建？</li><li>是否已生成了 <code>.jar</code> 文件，或者是否有 Dockerfile 来构建 Spring Boot 容器？</li></ul></li><li><p><strong>MySQL 配置</strong>：</p><ul><li>MySQL 数据库的版本？</li><li>数据库的初始化脚本（如有的话）？</li><li>MySQL 的数据库配置，是否需要挂载外部数据卷保存数据？</li></ul></li><li><p><strong>应用的连接配置</strong>：</p><ul><li>Vue 前端如何连接到 Spring Boot 后端？（例如，API 地址在开发时是否通过代理，或者已经设置为生产环境的 URL）</li><li>Spring Boot 如何连接 MySQL？是否有外部配置（如 <code>application.properties</code> 或 <code>application.yml</code> 中的数据库连接设置）？</li></ul></li><li><p><strong>其他配置</strong>：</p><ul><li>是否有任何环境变量，配置文件或 secrets 需要传递给容器？</li><li>是否需要使用 Docker Compose 来管理多个容器（例如前端、后端、数据库）？</li></ul></li></ol><h3 id="实际情况-："><a href="#实际情况-：" class="headerlink" title="实际情况 ："></a>实际情况 ：</h3><ol><li>vue项目还没打包，没有dockerfile </li><li>2.springboot采用maven构建，没有.jar文件，没有dockerfile 其中pom.xml为：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>17<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--SpringMvc--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--mybatis--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--MySQL--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--lombok--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-spring-boot3-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.8.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>我不知道mysql的版本；MySQL 的数据库配置需要挂载外部数据卷保存数据 </li><li>vue前端和springboot后端通过跨域配置进行连接 ,vue.config.js内容为:  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 跨域配置</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line"></span><br><span class="line">  <span class="attr">devServer</span>: &#123;                <span class="comment">//记住，别写错了devServer//设置本地默认端口  选填</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//port: 9876,</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">proxy</span>: &#123;                 <span class="comment">//设置代理，必须填</span></span><br><span class="line"></span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;              <span class="comment">//设置拦截器  拦截器格式   斜杠+拦截器名字，名字可以自己定</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://localhost:9091&#x27;</span>,     <span class="comment">//代理的目标地址</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span>,              <span class="comment">//是否设置同源，输入是的</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">pathRewrite</span>: &#123;                   <span class="comment">//路径重写</span></span><br><span class="line"></span><br><span class="line">          <span class="string">&#x27;^/api&#x27;</span>: <span class="string">&#x27;&#x27;</span>                     <span class="comment">//选择忽略拦截器里面的内容</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>没有环境变量，配置文件或 secrets 需要传递给容器需要使用 Docker Compose 来管理多个容器，即前端、后端、数据库</li></ol><h3 id="大致的部署流程"><a href="#大致的部署流程" class="headerlink" title="大致的部署流程"></a>大致的部署流程</h3><ol><li><strong>为 Vue 应用创建 Dockerfile</strong>：该 Dockerfile 用于将 Vue 应用打包为静态文件并部署到 Nginx 或其他 web 服务器中。</li><li><strong>为 Spring Boot 应用创建 Dockerfile</strong>：这个 Dockerfile 将包含 Java 环境和 Spring Boot <code>.jar</code> 文件。</li><li><strong>使用 Docker Compose 配置文件</strong>：编写 <code>docker-compose.yml</code> 文件，用于启动 Vue 前端、Spring Boot 后端和 MySQL 数据库的三个服务。</li></ol><h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><p><strong>注意：下面有两种方案，我采取的是方案二</strong></p><h3 id="方案一：使用Docker-Desktop的WSL集成"><a href="#方案一：使用Docker-Desktop的WSL集成" class="headerlink" title="方案一：使用Docker Desktop的WSL集成"></a>方案一：使用Docker Desktop的WSL集成</h3><p>Docker Desktop，启用WSL 2 集成，这样Docker Desktop会将WSL与Windows的Docker环境整合在一起。</p><ol><li>打开Docker Desktop，在设置中启用 <code>WSL 2 integration</code>，并选择你使用的WSL发行版（如Ubuntu）。</li><li><strong>在Windows PowerShell或WSL中运行Docker</strong>：<br>在Windows的PowerShell中：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd D:\Desktop\project docker-compose up --build</span><br></pre></td></tr></table></figure>在WSL中：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /mnt/d/Desktop/project docker-compose up --build</span><br></pre></td></tr></table></figure></li></ol><p>优点：这种方式将WSL与Windows Docker紧密结合，无论你是在Windows还是WSL中操作Docker，都可以使用相同的Docker环境。</p><h3 id="方案二：将项目目录映射到WSL中的文件系统"><a href="#方案二：将项目目录映射到WSL中的文件系统" class="headerlink" title="方案二：将项目目录映射到WSL中的文件系统"></a>方案二：将项目目录映射到WSL中的文件系统</h3><p>如果你想继续使用WSL中的Docker，而不能直接在WSL中访问Windows文件系统，那么可以通过以下方法解决：</p><ol><li><strong>挂载Windows的文件系统到WSL</strong>： 在WSL中，Windows的文件系统已经挂载在<code>/mnt/</code>目录下。例如，<code>C:\</code>盘的文件可以在WSL中通过<code>/mnt/c/</code>访问。</li><li><strong>在WSL中访问Windows上的项目</strong>： 你可以在WSL中通过<code>/mnt/</code>目录访问Windows的文件。例如，如果你的项目在<code>D:\Desktop\project</code>下，你可以在WSL中访问它：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /mnt/d/Desktop/project</span><br></pre></td></tr></table></figure></li><li><strong>在WSL中运行Docker命令</strong>： 进入项目目录后，你可以在WSL的fish shell中运行Docker命令：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up --build</span><br></pre></td></tr></table></figure>优点： 这种方式允许你使用WSL中的Docker，但仍然能够访问Windows文件系统，避免了项目文件复制的麻烦。</li></ol><h3 id="方案三：将项目文件复制到WSL的文件系统中"><a href="#方案三：将项目文件复制到WSL的文件系统中" class="headerlink" title="方案三：将项目文件复制到WSL的文件系统中"></a>方案三：将项目文件复制到WSL的文件系统中</h3><p>如果你希望项目文件完全在WSL的Linux文件系统中，你可以将项目文件从Windows复制到WSL中，之后再通过WSL的Docker进行操作。</p><ol><li><strong>复制项目到WSL</strong>：<br>在PowerShell中运行以下命令，将项目复制到WSL的文件系统中（例如，复制到<code>/home/your-user/projects</code>目录）：  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -r D:\Desktop\project\health_manage_springboot \\wsl$\Ubuntu\home\your-user\projects\</span><br></pre></td></tr></table></figure></li><li><strong>在WSL中进入项目目录</strong>：<br>打开WSL的终端，进入项目目录：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~/projects/health_manage_springboot</span><br></pre></td></tr></table></figure></li><li><strong>运行Docker命令</strong>：<br>在项目目录下，运行<code>docker-compose up --build</code>命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up --build</span><br></pre></td></tr></table></figure></li></ol><p>优点：这种方式将项目文件复制到WSL的Linux文件系统中，确保在WSL环境下操作更加流畅，避免文件系统访问的问题。</p><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>通过创建 Dockerfile、配置 Docker Compose 文件，将前端、后端和数据库拆解为不同的容器。</p><h3 id="1-打包-Vue-项目"><a href="#1-打包-Vue-项目" class="headerlink" title="1. 打包 Vue 项目"></a>1. 打包 Vue 项目</h3><p>在部署到 Docker 之前，Vue 项目需要打包成静态文件。</p><h4 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h4><ol><li>确保你已经安装了 Node. js。</li><li>在项目根目录下，执行以下命令打包 Vue 项目：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm run build</span><br></pre></td></tr></table></figure>这将生成一个 <code>dist</code> 目录，里面是打包好的静态资源文件。</li></ol><h3 id="2-创建-Vue-的-Dockerfile"><a href="#2-创建-Vue-的-Dockerfile" class="headerlink" title="2. 创建 Vue 的 Dockerfile"></a>2. 创建 Vue 的 Dockerfile</h3><p>在 Vue 项目的根目录中，创建一个 Dockerfile，用于构建一个运行 Vue 静态文件的 Nginx 容器。</p><h4 id="Dockerfile-Vue"><a href="#Dockerfile-Vue" class="headerlink" title="Dockerfile (Vue)"></a>Dockerfile (Vue)</h4><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 选择node环境作为构建阶段</span></span><br><span class="line"><span class="keyword">FROM</span> node:<span class="number">16</span> AS build-stage</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置工作目录</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将package.json和package-lock.json复制到容器中</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> package*.json ./</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> npm install</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将项目代码复制到容器中</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> . .</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打包项目</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> npm run build</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Nginx用于托管打包后的静态文件</span></span><br><span class="line"><span class="keyword">FROM</span> nginx:alpine AS production-stage</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将Nginx配置文件替换为自定义配置文件</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> nginx.conf /etc/nginx/nginx.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将打包后的静态文件复制到Nginx的html目录</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> --from=build-stage /app/dist /usr/share/nginx/html</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 暴露80端口</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Nginx</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;nginx&quot;</span>, <span class="string">&quot;-g&quot;</span>, <span class="string">&quot;daemon off;&quot;</span>]</span></span><br></pre></td></tr></table></figure><h4 id="Nginx-配置文件-nginx-conf"><a href="#Nginx-配置文件-nginx-conf" class="headerlink" title="Nginx 配置文件 (nginx. conf)"></a>Nginx 配置文件 (nginx. conf)</h4><p>你需要创建一个 <code>nginx.conf</code> 文件，指定如何处理前端资源：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nginx.conf</span></span><br><span class="line"><span class="attribute">worker_processes</span> auto;</span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span> <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       /etc/nginx/mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 配置server块，处理前端请求和API代理</span></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span> localhost;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line">            <span class="attribute">root</span>   /usr/share/nginx/html;</span><br><span class="line">            <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">            <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 代理API请求到后端Spring Boot服务</span></span><br><span class="line">        <span class="section">location</span> /api/ &#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://backend:9091/;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-打包-Spring-Boot-项目"><a href="#3-打包-Spring-Boot-项目" class="headerlink" title="3. 打包 Spring Boot 项目"></a>3. 打包 Spring Boot 项目</h3><p>为了将 Spring Boot 项目部署到 Docker 中，我们需要先生成一个可执行的 JAR 文件。</p><h4 id="使用系统环境中的Maven："><a href="#使用系统环境中的Maven：" class="headerlink" title="使用系统环境中的Maven："></a>使用系统环境中的Maven：</h4><ol><li>在项目根目录下，使用 Maven 打包 Spring Boot 项目：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package</span><br></pre></td></tr></table></figure>这将在 <code>target</code> 目录中生成一个 JAR 文件。</li></ol><h4 id="IDEA的Maven工具："><a href="#IDEA的Maven工具：" class="headerlink" title="IDEA的Maven工具："></a>IDEA的Maven工具：</h4><p>这里由于我开发时使用的 maven 是 idea 自带的，在终端运行时会报错，故使用 IDE 自带的 Maven 项目进行打包。</p><ol><li>打开IntelliJ IDEA，进入Spring Boot项目。</li><li>点击右侧的“Maven”工具窗口（如果看不到，可以通过<code>View -&gt; Tool Windows -&gt; Maven</code>来打开）。</li><li>展开项目中的Maven模块，找到<code>Lifecycle</code>。</li><li>在<code>Lifecycle</code>下，找到<code>clean</code>和<code>package</code>两个任务。</li><li>先双击<code>clean</code>，然后再双击<code>package</code>。</li></ol><p>这样，IntelliJ IDEA会使用自带的Maven来清理项目并打包为JAR文件。打包完成后，生成的JAR文件会在<code>target</code>目录下。</p><h3 id="4-创建-Spring-Boot-的-Dockerfile"><a href="#4-创建-Spring-Boot-的-Dockerfile" class="headerlink" title="4. 创建 Spring Boot 的 Dockerfile"></a>4. 创建 Spring Boot 的 Dockerfile</h3><p>在 Spring Boot 项目的根目录中，创建一个 Dockerfile，用于构建 Spring Boot 容器。</p><h4 id="Dockerfile-Spring-Boot"><a href="#Dockerfile-Spring-Boot" class="headerlink" title="Dockerfile (Spring Boot)"></a>Dockerfile (Spring Boot)</h4><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用openjdk作为基础镜像</span></span><br><span class="line"><span class="keyword">FROM</span> openjdk:<span class="number">17</span>-jdk-alpine</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置工作目录</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制打包好的JAR文件到容器中</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> target/demo-0.0.1-SNAPSHOT.jar app.jar</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 暴露9091端口</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">9091</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Spring Boot应用</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;java&quot;</span>, <span class="string">&quot;-jar&quot;</span>, <span class="string">&quot;app.jar&quot;</span>]</span></span><br></pre></td></tr></table></figure><h3 id="5-MySQL-容器配置"><a href="#5-MySQL-容器配置" class="headerlink" title="5. MySQL 容器配置"></a>5. MySQL 容器配置</h3><p>为了将 MySQL 运行在 Docker 中，我们可以直接使用官方的 MySQL 镜像，并通过 Docker Compose 配置其数据库、用户和挂载外部数据卷来保存数据。<br>在 6 中可以完成这个需求。</p><h3 id="6-创建-Docker-Compose-文件"><a href="#6-创建-Docker-Compose-文件" class="headerlink" title="6. 创建 Docker Compose 文件"></a>6. 创建 Docker Compose 文件</h3><p>Docker Compose 文件用于管理这三个服务（Vue 前端、Spring Boot 后端、MySQL 数据库）。</p><h4 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose. yml"></a>docker-compose. yml</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="comment"># Vue前端</span></span><br><span class="line">  <span class="attr">frontend:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">./vue-project</span>   <span class="comment"># 指定Vue项目的根目录</span></span><br><span class="line">      <span class="attr">dockerfile:</span> <span class="string">Dockerfile</span></span><br><span class="line">    <span class="attr">dns:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8.8</span><span class="number">.4</span><span class="number">.4</span> <span class="comment">#这里指定使用Google DNS服务器（8.8.8.8和8.8.4.4），因为我在npm install时出现ETIMEOUT，故设置Google的公共DNS服务器解决该问题。也可以通过增加网络超时时间或者本地安装依赖导入node_modules解决</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8080:80&quot;</span>  <span class="comment"># 将容器的80端口映射到主机的8080端口</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">backend</span>  <span class="comment"># 确保后端先启动</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Spring Boot后端</span></span><br><span class="line">  <span class="attr">backend:</span></span><br><span class="line">    <span class="attr">build:</span></span><br><span class="line">      <span class="attr">context:</span> <span class="string">./springboot-project</span>  <span class="comment"># 指定Spring Boot项目的根目录</span></span><br><span class="line">      <span class="attr">dockerfile:</span> <span class="string">Dockerfile</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9091:9091&quot;</span>  <span class="comment"># 映射后端服务端口</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SPRING_DATASOURCE_URL:</span> <span class="string">jdbc:mysql://db:3306/health?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=UTC</span></span><br><span class="line">      <span class="attr">SPRING_DATASOURCE_USERNAME:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">SPRING_DATASOURCE_PASSWORD:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db</span>  <span class="comment"># 确保数据库先启动</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># MySQL数据库</span></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:8.0</span>  <span class="comment"># MySQL镜像</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="number">123456</span>  <span class="comment"># 设置root密码</span></span><br><span class="line">      <span class="attr">MYSQL_DATABASE:</span> <span class="string">health</span>  <span class="comment"># 初始化数据库</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db_data:/var/lib/mysql</span>  <span class="comment"># 挂载卷，用于持久化存储</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/mnt/d/Desktop/project/health_management.sql:/docker-entrypoint-initdb.d/health_management.sql</span> <span class="comment"># 挂载SQL文件</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3306:3306&quot;</span>  <span class="comment"># 映射MySQL端口</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">db_data:</span>  <span class="comment"># 数据卷用于存储MySQL数据</span></span><br></pre></td></tr></table></figure><h3 id="7-使用-Docker-Compose-启动服务"><a href="#7-使用-Docker-Compose-启动服务" class="headerlink" title="7. 使用 Docker Compose 启动服务"></a>7. 使用 Docker Compose 启动服务</h3><ol><li>在 WSL 中导航到项目的根目录<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /mnt/d/Desktop/project</span><br></pre></td></tr></table></figure></li><li>运行 docker compose 命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up --build</span><br></pre></td></tr></table></figure></li></ol><p>这个命令会：</p><ol><li>构建 Vue 前端、Spring Boot 后端和 MySQL 的容器镜像。</li><li>使用 Nginx 托管 Vue 前端的静态文件。</li><li>将前端请求代理到后端 Spring Boot 应用。</li><li>启动 MySQL 并将数据保存在本地挂载卷中。</li></ol><h3 id="8-检查服务是否正常运行"><a href="#8-检查服务是否正常运行" class="headerlink" title="8. 检查服务是否正常运行"></a>8. 检查服务是否正常运行</h3><ol><li>访问 <code>http://localhost:8080</code> 来查看 Vue 前端是否正常工作。</li><li>后端 Spring Boot 服务应该在 <code>http://localhost:9091</code> 正常运行。</li><li>通过 <code>docker logs &lt;container_name&gt;</code> 查看各个容器的日志，确保一切正常。</li><li>如果导入 sql 文件出现问题，检查SQL文件是否已经成功导入：<br>进入 mysql 容器：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it &lt;container_id&gt; /bin/bash</span><br></pre></td></tr></table></figure>(用 <code>docker ps -a</code> 获取 container_id)<br>登录 mysql:<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root t-p</span><br></pre></td></tr></table></figure>检查数据库中是否有你导入的表和数据：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">USE health; </span><br><span class="line"><span class="keyword">SHOW</span> TABLES;</span><br></pre></td></tr></table></figure>如果 SQL 文件没有挂载成功的话可以采取手动导入 SQL 文件:<br>注意这里的 sql 表格如果你是从 gitee 上直接 clone 的需要删除 <code>CREATE DATABASE health;</code> 这条语句，因为数据库 <code>health</code> 已经存在。<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">zyh@QAQ /m/d/D/project (master)&gt; docker exec -it 649ab335c63b /bin/bash</span><br><span class="line">bash-5.1#  mysql -u root -p</span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 13</span><br><span class="line">Server version: 8.0.39 MySQL Community Server - GPL</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2024, Oracle and/or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">USE health;</span></span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">SHOW TABLES;</span></span><br><span class="line">+------------------+</span><br><span class="line">| Tables_in_health |</span><br><span class="line">+------------------+</span><br><span class="line">| body             |</span><br><span class="line">| user             |</span><br><span class="line">+------------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">SELECT * FROM user;</span></span><br><span class="line">+----+----------+----------+-------------+------+----------------------+--------+</span><br><span class="line">| id | username | password | number      | role | email                | avatar |</span><br><span class="line">+----+----------+----------+-------------+------+----------------------+--------+</span><br><span class="line">|  1 | gss      | 123456   | 13343243242 |    1 | super@aliyun.com     |        |</span><br><span class="line">|  2 | zhangsan | 123456   | NULL        |    1 | zhangsan@gmail.com   |        |</span><br><span class="line">|  3 | lisi     | 123456   | NULL        |    1 | lisi@gmail.com       |        |</span><br><span class="line">|  4 | wangwu   | 123456   | NULL        |    0 | wangwu@gmail.com     |        |</span><br><span class="line">|  5 | zhaoer   | 123456   | NULL        |    0 | zhaoer@gmail.com     |        |</span><br><span class="line">|  6 | songliu  | 123456   | 4322432434  |    0 | songliu@gmail.com    |        |</span><br><span class="line">| 13 | Alice    | 123456   | 234532111   |    0 | alice@example.com    |        |</span><br><span class="line">| 14 | Bob      | 123456   | 13564736363 |    0 | bob@example.com      |        |</span><br><span class="line">| 15 | Charlie  | 123456   | 25323626    |    0 | charlie@example.com  |        |</span><br><span class="line">| 16 | David1   | 123456   | 145256264   |    0 | david@example.com    |        |</span><br><span class="line">| 17 | Emma     | 123456   | 152334445   |    0 | emma@example.com     |        |</span><br><span class="line">| 18 | Frank    | 123456   | 1566543646  |    0 | frank@example.com    |        |</span><br><span class="line">| 19 | Grace    | 123456   | 1435253535  |    0 | grace@example.com    |        |</span><br><span class="line">| 20 | Henry    | 123456   | 15325363463 |    0 | henry@example.com    |        |</span><br><span class="line">| 21 | Isabella | 123456   | 15353435    |    0 | isabella@example.com |        |</span><br><span class="line">| 22 | Jacob    | 123456   | 114523424   |    0 | jacob@example.com    |        |</span><br><span class="line">| 31 | test     | 123456   | NULL        |    0 |                      |        |</span><br><span class="line">+----+----------+----------+-------------+------+----------------------+--------+</span><br><span class="line">17 rows in set (0.00 sec)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">mysql&gt;</span></span><br></pre></td></tr></table></figure>上述信息表示一切功能正常。</li></ol><h4 id="补充-："><a href="#补充-：" class="headerlink" title="补充 ："></a>补充 ：</h4><ol><li>停止正在运行的容器：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose down</span><br></pre></td></tr></table></figure>停止并删除所有服务容器、网络和卷（不删除数据卷）<br>再次启动：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up --build</span><br></pre></td></tr></table></figure></li><li>停止容器而不删除<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose stop</span><br></pre></td></tr></table></figure>再次启动：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose start</span><br></pre></td></tr></table></figure></li><li>查看当前运行的容器<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure>包含历史：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;小白的docker学习全过程&lt;/p&gt;</summary>
    
    
    
    <category term="打卡" scheme="https://strangersinsist.github.io/categories/%E6%89%93%E5%8D%A1/"/>
    
    
    <category term="docker" scheme="https://strangersinsist.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>打卡贴</title>
    <link href="https://strangersinsist.github.io/2024/09/14/%E6%89%93%E5%8D%A1%E8%B4%B4/"/>
    <id>https://strangersinsist.github.io/2024/09/14/%E6%89%93%E5%8D%A1%E8%B4%B4/</id>
    <published>2024-09-14T15:35:33.133Z</published>
    <updated>2024-09-18T12:50:37.522Z</updated>
    
    <content type="html"><![CDATA[<p>这里是我的21天打卡计划。</p><span id="more"></span><h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3><p><a href="https://leetcode.cn/leetbook/detail/top-interview-questions-easy/">初级算法 - LeetBook - 力扣（LeetCode）</a></p><h6 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h6><ol><li>删除排序数组中的重复项<br>给你一个非严格递增排列的数组 nums ，请你原地删除重复出现的元素，使每个元素只出现一次，返回删除后数组的新长度。元素的相对顺序应该保持一致。然后返回 nums 中唯一元素的个数。</li></ol><p>考虑 nums 的唯一元素的数量为 k ，你需要做以下事情确保你的题解可以被通过：</p><p>更改数组 nums ，使 nums 的前 k 个元素包含唯一元素，并按照它们最初在 nums 中出现的顺序排列。nums 的其余元素与 nums 的大小不重要。<br>返回 k 。</p><p>   双指针解题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">removeDuplicates</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">if</span>(n=<span class="number">0</span>)&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> fast=<span class="number">1</span>,slow=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(fast&lt;n)&#123;</span><br><span class="line">  <span class="keyword">if</span>(nums[fast]!=nums[fast<span class="number">-1</span>])&#123;</span><br><span class="line">     nums[slow]=nums[fast];</span><br><span class="line">     ++slow;</span><br><span class="line">  &#125;</span><br><span class="line">  ++fast;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> slow;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">   </span><br></pre></td></tr></table></figure><ol start="2"><li>买卖股票的最佳时机 II<br>给你一个整数数组 prices ，其中 prices[i] 表示某支股票第 i 天的价格。</li></ol><p>在每一天，你可以决定是否购买和&#x2F;或出售股票。你在任何时候最多只能持有一股股票。你也可以先购买，然后在同一天出售。</p><p>返回你能获得的最大利润。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="function"><span class="type">int</span> <span class="title">maxProfit</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp;prices)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n=prices.<span class="built_in">size</span>();</span><br><span class="line">    <span class="type">int</span> tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(prices[i]&gt;price[i<span class="number">-1</span>])&#123;</span><br><span class="line">        tot+=price[i]-price[i<span class="number">-1</span>];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> tot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol start="3"><li>旋转数组<br> 给定一个整数数组 <code>nums</code>，将数组中的元素向右轮转 <code>k</code> 个位置，其中 <code>k</code> 是非负数。</li></ol><p>  使用一个新的数组<br>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">rotate</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp;nums,<span class="type">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> len=nums.<span class="built_in">size</span>();</span><br><span class="line">    k=k%len;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;<span class="built_in">res</span>(len);</span><br><span class="line">    <span class="comment">//将后k个元素移到前面</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">      res[i]=nums[len-k+i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//将前len-k个元素移到后面</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;len-k;i++)&#123;</span><br><span class="line">      res[k+i]=nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//将结果复制回nums</span></span><br><span class="line">    nums=res;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><br>也可以这样</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">rotate</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp;nums,<span class="type">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;<span class="built_in">newArr</span>(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">      newArr[(i+k)%n]=nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">    nums.<span class="built_in">assign</span>(newArr.<span class="built_in">begin</span>(),newArr.<span class="built_in">end</span>());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol start="4"><li><p>存在重复元素<br>给你一个整数数组 <code>nums</code> 。如果任一值在数组中出现 <strong>至少两次</strong> ，返回 <code>true</code> ；如果数组中每个元素互不相同，返回 <code>false</code> 。<br>题解：<strong>考虑排序</strong>，排序后数组的重复元素一定出现在相邻位置中</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">containsDuplicate</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line"><span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(),nums.<span class="built_in">end</span>());</span><br><span class="line"><span class="type">int</span> n=nums.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">  <span class="keyword">if</span>(nums[i]==nums[i+<span class="number">1</span>])&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>只出现一次的数字<br>  给你一个非空整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。你必须设计并实现线性时间复杂度的算法来解决此问题，且该算法只使用常量额外空间。<br>  第一次的解法（没有考虑线性时间复杂度）这么写是因为收到前面思路的影响</p>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">singleNumber</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果数组只有一个元素，直接返回</span></span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 检查第一个元素是否是唯一的</span></span><br><span class="line">        <span class="keyword">if</span> (nums[<span class="number">0</span>] != nums[<span class="number">1</span>]) &#123;</span><br><span class="line">            <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 检查最后一个元素是否是唯一的</span></span><br><span class="line">        <span class="keyword">if</span> (nums[n - <span class="number">1</span>] != nums[n - <span class="number">2</span>]) &#123;</span><br><span class="line">            <span class="keyword">return</span> nums[n - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 从第二个元素到倒数第二个元素进行检查</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nums[i] != nums[i - <span class="number">1</span>] &amp;&amp; nums[i] != nums[i + <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="keyword">return</span> nums[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果要考虑线性时间复杂度 O (n):</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">singleNumber</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> num : nums) &#123;</span><br><span class="line"></span><br><span class="line">            result ^= num;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这个异或解法的时间复杂度是 O(n)，空间复杂度是 O(1)<br>考虑线性时间复杂度和常量空间复杂度：异或运算<br>异或运算有以下性质：</p></li><li><p><code>a ^ a = 0</code>（任何数与自己异或的结果是0）</p></li><li><p><code>a ^ 0 = a</code>（任何数与0异或的结果是这个数本身）</p></li><li><p>异或运算满足交换律和结合律。</p></li></ol><p>因此，如果数组中除了一个数以外其他数都出现两次，那么将所有数进行异或运算，结果就是那个只出现一次的数。</p><p>ps: 复习位运算的规律：（相同为０不同为１）<br><code>1^1=0;</code><br><code>1^0=1;</code><br><code>0^1=1;</code><br><code>0^0=0;</code><br>6. 两个数组的交集Ⅱ<br>   给你两个整数数组 nums 1 和 nums 2 ，请你以数组形式返回两数组的交集。返回结果中每个元素出现的次数，应与元素在两个数组中都出现的次数一致（如果出现次数不一致，则考虑取较小值）。可以不考虑输出结果的顺序。<br>法一：哈希表<br>遍历第一个数组，在哈希表中记录第一个数组中每个数字以及出现的次数，然后遍历第二个数组，如果哈希表中存在这个数字，将这个数字添加到答案，并减少哈希表中该数字出现的次数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  vector&lt;<span class="type">int</span>&gt;<span class="built_in">intersect</span>(vector&lt;<span class="type">int</span>&gt;&amp;nums1,vector&lt;<span class="type">int</span>&gt;&amp;nums2)&#123;</span><br><span class="line">  <span class="keyword">if</span>(nums1.<span class="built_in">size</span>()&gt;nums2.<span class="built_in">size</span>())&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">intersect</span>(nums2,nums1);</span><br><span class="line">  &#125;</span><br><span class="line">  unordered_map&lt;<span class="type">int</span>,<span class="type">int</span>&gt;m;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> num:nums1)&#123;</span><br><span class="line">    ++m[num];</span><br><span class="line">  &#125;</span><br><span class="line">  vector&lt;<span class="type">int</span>&gt;intersection;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> num:nums2)&#123;</span><br><span class="line">    <span class="keyword">if</span>(m.<span class="built_in">count</span>(num))&#123;</span><br><span class="line">      intersection.<span class="built_in">push_back</span>(num);</span><br><span class="line">      --m[num];</span><br><span class="line">      <span class="keyword">if</span>(m[num]==<span class="number">0</span>)&#123;</span><br><span class="line">        m.<span class="built_in">erase</span>(num);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> intersection;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><h5 id="STL"><a href="#STL" class="headerlink" title="STL"></a>STL</h5><h5 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h5>]]></content>
    
    
    <summary type="html">&lt;p&gt;这里是我的21天打卡计划。&lt;/p&gt;</summary>
    
    
    
    <category term="打卡" scheme="https://strangersinsist.github.io/categories/%E6%89%93%E5%8D%A1/"/>
    
    
    <category term="前端" scheme="https://strangersinsist.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="后端" scheme="https://strangersinsist.github.io/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="算法" scheme="https://strangersinsist.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Unity2D小游戏</title>
    <link href="https://strangersinsist.github.io/2024/07/19/Unity2D/"/>
    <id>https://strangersinsist.github.io/2024/07/19/Unity2D/</id>
    <published>2024-07-19T15:03:05.491Z</published>
    <updated>2024-09-18T12:54:33.498Z</updated>
    
    <content type="html"><![CDATA[<p>演示视频</p><span id="more"></span><video width="800" height="500" controls>  <source src="https://github.com/strangersinsist/strangersinsist.github.io/raw/master/source/7.19/1.mp4" type="video/mp4"></video>]]></content>
    
    
    <summary type="html">&lt;p&gt;演示视频&lt;/p&gt;</summary>
    
    
    
    <category term="游戏开发" scheme="https://strangersinsist.github.io/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="unity" scheme="https://strangersinsist.github.io/tags/unity/"/>
    
    <category term="c#" scheme="https://strangersinsist.github.io/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>基于Springboot+Vue的WebApp开发实验报告</title>
    <link href="https://strangersinsist.github.io/2024/06/18/web%E5%BC%80%E5%8F%91/"/>
    <id>https://strangersinsist.github.io/2024/06/18/web%E5%BC%80%E5%8F%91/</id>
    <published>2024-06-18T13:55:32.940Z</published>
    <updated>2024-09-18T12:54:39.781Z</updated>
    
    <content type="html"><![CDATA[<p>  Java与面向对象设计的大作业，实验报告docx用pandoc转成了md。</p><span id="more"></span><p><strong>【实验目的】</strong></p><ol><li><p>掌握Java与面向对象基本原理和概念。</p></li><li><p>掌握Java与面向对象编程思想和主流技术或框架。</p></li><li><p>掌握基于Java开发完整软件Demo，并能演示。</p></li></ol><p><strong>【实验装备】</strong></p><p>个人笔记本，idea，JDK环境，mysql，navicat, vue，git等。</p><p><strong>【实验内容】</strong></p><p>基于所选择的主题方向，调研、分析和设计3-5个核心场景（模块）作为研究对象，根据掌握的Java和相关知识，实现相对完整的WebApp应用。以Java为基础，可以自由选择搭配其它技术和框架，输出详细的设计文档、项目源代码和可运行的Demo视频。</p><p><strong>【实验要求】</strong></p><ol><li><p>按实验内容输出详细设计、实现、运行关键截图，要求行文整洁、紧凑、顺畅。</p></li><li><p>代码以团队gitee形式提交，视频以百度网盘形式提交，可限时公开访问。</p></li></ol><blockquote><p>团队Gitee: <a href="https://gitee.com/AIJavaGroup">JavaGroup (gitee.com)</a></p><p>本项目代码: <a href="https://gitee.com/AIJavaGroup/project">JavaGroup&#x2F;project<br>(gitee.com)</a></p><p>视频百度网盘：<a href="https://pan.baidu.com/s/1H2LPdaarlfgZMcD_KRa6jg?pwd=2s45">链接</a><br>提取码：2s45</p></blockquote><ol start="3"><li>实验报告需要交代团队成员分工，以及自己承担的任务（要求任务量合理，鼓励交叉参与）；个人报告要求完整，团队成果部分精炼描述，侧重个人为主部分加以详细描述。</li></ol><p><strong>【实验分析】</strong></p><p>输出实验分析总结和心得体会。</p><p><strong>【参考资料】</strong></p><p>参考教程：<a href="https://www.bilibili.com/video/BV14y4y1M7Nc/?vd_source=270ace08b7863e0889a5cb86e5e103ac">带你从0搭建一个Springboot+vue前后端分离项目，真的很简单！_哔哩哔哩_bilibili</a></p><p>参考资料：</p><p>1. <a href="https://element-plus.org/zh-CN/">一个 Vue 3 UI 框架 | Element Plus(element-plus.org)</a></p><p>2. <a href="https://cn.vuejs.org/">Vue.js 教程 | Vue.js 中文文档(cn.vuejs.org)</a></p><p>3. <a href="https://www.bilibili.com/video/BV1Xx421Q7df/?vd_source=270ace08b7863e0889a5cb86e5e103ac">SpringBoot+Vue个人健康管理系统Java毕业设计_哔哩哔哩_bilibili</a>(主要参考要实现什么功能)</p><p>这个源代码上传至：<a href="https://gitee.com/AIJavaGroup/health_management">JavaGroup&#x2F;health_management(gitee.com)</a></p><p><strong>【目录】</strong></p><p><strong>一.背景分析</strong></p><p>经过了解和学习，为实现健康管理系统，我们采取了一种现代化的前后端分离架构，以下是我们选用的关键技术和工具：</p><p>1.前端技术</p><p>Vue.js：作为一个渐进式JavaScript框架，Vue.js被用于创建高效、灵活的用户界面。它的组件化架构让我们能够重用代码并加快开发速度。</p><p>Element-Plus：基于Vue3的桌面端组件库，提供了一套丰富的UI组件，帮助我们在保持界面美观的同时，减少了开发和设计的工作量。</p><p>2.后端技术</p><p>SpringBoot：简化了基于Spring的应用开发过程，使得我们能够快速搭建和部署微服务。SpringBoot自动配置的特性大幅度减轻了配置工作，让我们能够专注于业务逻辑的实现。</p><p>MyBatis：它是一个支持定制SQL、存储过程以及高级映射的持久层框架。MyBatis消除了几乎所有的JDBC代码，并手动设置参数以及获取结果集。通过简单的XML或注解，我们能够将接口映射成数据库中的记录。</p><p>Lombok：一个Java库，通过使用注解，能够自动化生成模板代码，如getters、setters、constructors等。Lombok极大地简化了我们的Java代码，使得它更加简洁易读。</p><p>3.数据库管理</p><p>MySQL：我们选择MySQL作为后端数据库，借助其强大和广泛支持的特性来存储应用数据。</p><p>Navicat：作为一款强大的数据库管理工具，Navicat让数据库的管理变得轻松便捷。它不仅支持MySQL，还支持大量其它数据库，提供直观的GUI方便进行数据管理、开发和维护。</p><p><strong>二.需求分析</strong></p><p>我们计划实现3-5个主核心功能，参考<a href="https://www.sghealth.cn/health">健康管理系统|拾果健康(sghealth.cn)</a>及网上找到一些健康管理系统找到大概想实现的功能。在写好vue+springboot基本框架，搭建好跨域配置，写好依赖，写好基本的响应码，数据库配置，引入数据库表格写好mapper,controller,entity等等后，决定按功能分工，各自实现负责的功能的前端+后端。虽然前后端分离，但是功能一个人同时写，不断加功能完善项目，同时锻炼写前端和后端的能力。</p><p><strong>三.系统设计</strong></p><p>下面是我们当时设计的方案：</p><ol><li>系统：管理员、用户</li></ol><p>登录界面参考：</p><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/1.jpg?raw=true"></p><ol start="2"><li>首页</li></ol><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/2.jpg?raw=true"></p><ol start="3"><li>健康信息上传</li></ol><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/3.jpg?raw=true"></p><ol start="4"><li>商品推荐</li></ol><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/4.png?raw=true"></p><ol start="5"><li>运动知识</li></ol><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/5.png?raw=true"></p><ol start="6"><li>评估与建议</li></ol><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/6.png?raw=true"></p><p>随后进行抽签，选择各自要实现的功能。抽签决定好后先写好头部和侧边栏，新建不同的.vue和路由，之后每个人写自己的.vue并根据需要补充后端.java即可。</p><p><strong>四.系统实现</strong></p><p><strong>团队成果：</strong></p><p>采用前端部分使用Vue.js和Element-Plus来构建用户界面，后端使用SpringBoot和MyBatis进行业务逻辑的处理和数据持久化，同时使用Navicat来管理MySQL数据库，并借助Lombok简化Java代码的开发。</p><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/7.png?raw=true"></p><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/8.png?raw=true"></p><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/9.png?raw=true"></p><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/10.png?raw=true"></p><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/11.png?raw=true"></p><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/12.png?raw=true"></p><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/13.png?raw=true"></p><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/14.png?raw=true"></p><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/15.png?raw=true"></p><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/16.png?raw=true"></p><p><strong>个人报告：</strong></p><p>我的任务：准备阶段学习git，gitee的使用和navicat，idea的配置并创建gitee团队；正式写项目时负责4个小功能，分别是登录、注册、设置、健康问答。并简单改动一下其他部分的细节。最后整理项目时导出sql文件，写项目README。</p><p>我的gitee：<a href="https://gitee.com/strangersinsist">Zhuyuehan (strangersinsist) -Gitee</a></p><p>1).准备阶段：</p><p>参照<a href="https://gitee.com/AIJavaGroup/health_management">JavaGroup&#x2F;health_management(gitee.com)</a>学会怎么运行前端后端数据库,git的一些操作。</p><!-- ![](https://github.com/strangersinsist/strangersinsist.github.io/blob/source/17.png?raw=true) --><p>2).正式项目：</p><p>1.登录<br>前端<code>Login.vue</code>，并在health_manage_vue\src\router\index.js设置路由，点击按钮触发js,通过post与后端进行交互。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;Login&quot;,</span><br><span class="line">  components: &#123;User,Lock&#125;,</span><br><span class="line">  data()&#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      form:&#123;&#125;,</span><br><span class="line">      rules:&#123;</span><br><span class="line">        username:[</span><br><span class="line">          &#123;required:true,message:&quot;请输入用户名&quot;,trigger:&#x27;blur&#x27;&#125;,</span><br><span class="line">        ],</span><br><span class="line">        password:[</span><br><span class="line">          &#123;required:true,message:&quot;请输入密码&quot;,trigger:&#x27;blur&#x27;&#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    login()&#123;</span><br><span class="line">      request.post(&quot;/api/user/login&quot;,this.form).then(res =&gt;&#123;</span><br><span class="line">        console.log(res);</span><br><span class="line">        if(res.code == &#x27;200&#x27;)&#123;</span><br><span class="line">          this.$message(&#123;</span><br><span class="line">            type: &quot;success&quot;,</span><br><span class="line">            message:&quot;登录成功&quot;</span><br><span class="line">          &#125;)</span><br><span class="line">          //改一下试图存缓存</span><br><span class="line">          sessionStorage.setItem(&quot;user&quot;, JSON.stringify(res.data));</span><br><span class="line"></span><br><span class="line">          this.$router.push(&quot;/&quot;)</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">          this.$message(&#123;</span><br><span class="line">            type:&quot;error&quot;,</span><br><span class="line">            message:&quot;用户名或密码错误&quot;</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">import &#123;</span><br><span class="line">  User,Lock,</span><br><span class="line">&#125; from &#x27;@element-plus/icons-vue&#x27;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;login-container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;login-card&quot;&gt;</span><br><span class="line">      &lt;h1 class=&quot;login-title&quot;&gt;欢迎登录&lt;/h1&gt;</span><br><span class="line">      &lt;el-form :model=&quot;form&quot; :rules=&quot;rules&quot; class=&quot;login-form&quot; ref=&quot;loginForm&quot; size=&quot;large&quot;&gt;</span><br><span class="line">        &lt;el-form-item prop=&quot;username&quot; class=&quot;form-item&quot;&gt;</span><br><span class="line">          &lt;el-icon class=&quot;icon&quot;&gt;&lt;User /&gt;&lt;/el-icon&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;form.username&quot; placeholder=&quot;用户名：&quot; class=&quot;input-field&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item prop=&quot;password&quot; class=&quot;form-item&quot;&gt;</span><br><span class="line">          &lt;el-icon class=&quot;icon&quot;&gt;&lt;Lock /&gt;&lt;/el-icon&gt;</span><br><span class="line">          &lt;el-input type=&quot;password&quot; v-model=&quot;form.password&quot; placeholder=&quot;密码：&quot; class=&quot;input-field&quot; show-password&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;div class=&quot;form-actions&quot;&gt;</span><br><span class="line">          &lt;el-button class=&quot;action-button&quot; @click=&quot;login&quot;&gt;登录&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button class=&quot;action-button&quot; @click=&quot;this.$router.push(&#x27;/register&#x27;)&quot;&gt;注册&lt;/el-button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">//这部分为了优化界面写的比较多，省略，详细看gitee代码</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>后端和队友共用的Result.java，User.java，UserMapper.java和UserController.java，用于获取数据库信息及返回数据给前端，我在队友写的代码基础上增加了需要的部分<br><code>UserController.java:</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">package com.example.demo.controller;</span><br><span class="line">import …</span><br><span class="line"></span><br><span class="line">@RestController</span><br><span class="line">@RequestMapping(&quot;/user&quot;)</span><br><span class="line">public class UserController &#123;</span><br><span class="line">    @Resource</span><br><span class="line">    UserMapper userMapper;</span><br><span class="line">    @PostMapping(&quot;/login&quot;)</span><br><span class="line">    public Result&lt;?&gt; login(@RequestBody User user)&#123;</span><br><span class="line">        User res = userMapper.selectOne(Wrappers.&lt;User&gt;lambdaQuery().eq(User::getUsername,user.getUsername()).eq(User::getPassword,user.getPassword()));</span><br><span class="line">        if(res ==null)&#123;</span><br><span class="line">            return Result.fail(&quot;用户名或密码错误&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        return Result.success(res);</span><br><span class="line">    &#125;</span><br><span class="line">    @PostMapping(&quot;/register&quot;)</span><br><span class="line">    public Result&lt;?&gt; register(@RequestBody User user)&#123;</span><br><span class="line">        User res = userMapper.selectOne(Wrappers.&lt;User&gt;lambdaQuery().eq(User::getUsername,user.getUsername()));</span><br><span class="line">        if(res !=null)&#123;</span><br><span class="line">            return Result.fail(&quot;用户名重复&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        if(user.getPassword()==null)&#123;</span><br><span class="line">            user.setPassword(&quot;123456&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        userMapper.insert(user);</span><br><span class="line">        return Result.success(user);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>最初是这样：<br><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/20.png?raw=true"></p><p>经过美化：</p><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/21.png?raw=true"></p><p>2.注册</p><p>与登录基本类似，前端Register.vue，并在index.js设置路由。详细代码可以看gitee。(这个后面和登录用了同样的方式美化了一下)</p><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/22.png?raw=true"><br><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/23.png?raw=true"></p><p>3.设置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">import request from &quot;@/utils/request&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;Setting&quot;,</span><br><span class="line">  components: &#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  data()&#123;</span><br><span class="line">    return&#123;</span><br><span class="line">      form:&#123;&#125;,</span><br><span class="line">      input:&quot;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created()&#123;</span><br><span class="line">    let str=sessionStorage.getItem(&quot;user&quot;)||&quot;&#123;&#125;&quot;</span><br><span class="line">    this.form=JSON.parse(str)</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    handleClose()&#123;</span><br><span class="line">      this.$router.push(&#x27;/home&#x27;);</span><br><span class="line">    &#125;,</span><br><span class="line">    update()&#123;</span><br><span class="line">      request.put(&quot;api/user&quot;,this.form).then(res =&gt;&#123;</span><br><span class="line">        console.log(res);</span><br><span class="line">        if(res.code == &#x27;200&#x27;)&#123;</span><br><span class="line">          this.$message(&#123;</span><br><span class="line">            type: &quot;success&quot;,</span><br><span class="line">            message:&quot;更新成功&quot;</span><br><span class="line">          &#125;)</span><br><span class="line">          sessionStorage.setItem(&quot;user&quot;,JSON.stringify(this.form))</span><br><span class="line">          this.$router.push(&#x27;/home&#x27;);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">          this.$message(&#123;</span><br><span class="line">            type:&quot;error&quot;,</span><br><span class="line">            message:&quot;更新失败&quot;</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-dialog v-model=&quot;form&quot; title=&quot;个人信息编辑&quot; width=&quot;500&quot; @close=&quot;handleClose&quot;&gt;</span><br><span class="line">      &lt;el-form :model=&quot;form&quot;&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;用户名&quot; :label-width=&quot;formLabelWidth&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;form.username&quot; disabled&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;密码&quot; :label-width=&quot;formLabelWidth&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;form.password&quot; show-password&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;手机号&quot; :label-width=&quot;formLabelWidth&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;form.number&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;邮箱&quot; :label-width=&quot;formLabelWidth&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;form.email&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;div class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">        &lt;el-button @click=&quot;this.$router.push(&#x27;/home&#x27;)&quot;&gt;取消&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; @click=&quot;update&quot;&gt;</span><br><span class="line">          确认</span><br><span class="line">        &lt;/el-button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>这个是header.vue部分的设置，写这部分是新增了vue和路由实现的。这部分不难，是在element plus中找了表单，再写好script部分，获取的user信息就好了。后来优化这部分时补充handleClose方法点击叉号跳转&#x2F;home页面，使操作更加流畅。</p><p>4.健康问答</p><p>前端实现：<code>HomeView.vue</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;chatbox&quot;&gt;</span><br><span class="line">      &lt;h2 class=&quot;title&quot;&gt;健康问答&lt;/h2&gt;</span><br><span class="line">      &lt;div class=&quot;messages&quot; ref=&quot;messageBox&quot;&gt;</span><br><span class="line">        &lt;div</span><br><span class="line">            v-for=&quot;(message, index) in messages&quot;</span><br><span class="line">            :key=&quot;index&quot;</span><br><span class="line">            :class=&quot;&#123;&#x27;message-container&#x27;: true, &#x27;user-message&#x27;: message.sender === &#x27;User&#x27;, &#x27;bot-message&#x27;: message.sender !== &#x27;User&#x27;&#125;&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;el-avatar class=&quot;message-avatar&quot; style=&quot;background-color: cornflowerblue;color: black&quot;&gt;&#123;&#123;message.sender === &#x27;User&#x27; ? &#x27;User&#x27; : &#x27;Bot&#x27;&#125;&#125;&lt;/el-avatar&gt;</span><br><span class="line">          &lt;div class=&quot;message-content&quot;&gt;&#123;&#123;message.text&#125;&#125;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div class=&quot;input-section&quot;&gt;</span><br><span class="line">        &lt;input</span><br><span class="line">            type=&quot;text&quot;</span><br><span class="line">            class=&quot;userinput&quot;</span><br><span class="line">            v-model=&quot;userInput&quot;</span><br><span class="line">            @keyup.enter=&quot;sendMessage&quot;</span><br><span class="line">            placeholder=&quot;输入：&quot;</span><br><span class="line">        /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;button</span><br><span class="line">            class=&quot;send&quot;</span><br><span class="line">            @click=&quot;sendMessage&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          发送</span><br><span class="line">        &lt;/button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import axios from &#x27;axios&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;HomeView&#x27;,</span><br><span class="line">  components: &#123;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  data()&#123;</span><br><span class="line">    return&#123;</span><br><span class="line">      userInput: &#x27;&#x27;,</span><br><span class="line">      messages: [],</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    async callAPIMethod(input) &#123;</span><br><span class="line">      try &#123;</span><br><span class="line">        const response = await axios.post(&#x27;http://localhost:9091/reply&#x27;, &#123; message: input &#125;);</span><br><span class="line">        return response.data;</span><br><span class="line">      &#125; catch (error) &#123;</span><br><span class="line">        console.error(error);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    async sendMessage() &#123;</span><br><span class="line">      this.messages.push(&#123;</span><br><span class="line">        sender: &#x27;User&#x27;,</span><br><span class="line">        text: this.userInput,</span><br><span class="line">      &#125;);</span><br><span class="line">      console.log(&quot;Ready to send message: &quot; + this.userInput);</span><br><span class="line">      const response = await this.callAPIMethod(this.userInput);</span><br><span class="line">      console.log(&quot;Received message: &quot; + response);</span><br><span class="line">      if(response) &#123;</span><br><span class="line">        this.messages.push(&#123;</span><br><span class="line">          sender: &#x27;Bot&#x27;,</span><br><span class="line">          text: response,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      this.$refs.messageBox.scrollTop = this.$refs.messageBox.scrollHeight;</span><br><span class="line"></span><br><span class="line">      this.userInput = &#x27;&#x27;;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">//这部分太长了省略，详细看gitee代码</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>后端实现：<code>MessageController.java</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">package com.example.demo.controller;</span><br><span class="line">import …</span><br><span class="line"></span><br><span class="line">class Message &#123;</span><br><span class="line">    private String message;</span><br><span class="line">    // getter</span><br><span class="line">    // setter</span><br><span class="line">&#125;</span><br><span class="line">@CrossOrigin(origins = &quot;http://localhost:8080&quot;)</span><br><span class="line">@RestController</span><br><span class="line">public class MessageController &#123;</span><br><span class="line"></span><br><span class="line">    @PostMapping(&quot;/reply&quot;)</span><br><span class="line">    public String reply(@RequestBody Message message) &#123;</span><br><span class="line">        Random rand = new Random();</span><br><span class="line">        String[] responses = &#123;&quot;保持健康~&quot;, &quot;锻炼身体！&quot;, &quot;饮食规律~&quot;&#125;;</span><br><span class="line">        if (&quot;你好&quot;.equals(message.getMessage())) &#123;</span><br><span class="line">            return &quot;你好&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        else if (&quot;什么是亚健康管理系统&quot;.equals(message.getMessage())) &#123;</span><br><span class="line">            return &quot;这个亚健康管理系统是人工智能学院java小组开发的。包括主页，运动知识，健康购物，评估与建议，健康信息上传的功能&quot;;</span><br><span class="line">        &#125; </span><br><span class="line">//省略一些else if</span><br><span class="line">else &#123;</span><br><span class="line">            return responses[rand.nextInt(responses.length)];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这部分本来我想连一个大语言模型的api，但是后来找不到适合的免费api，并且觉得如果是健康管理系统的话可能直接连一个大模型不太合适，要手动个性化设置一下，遂写了一些回复语代替，比较简洁，仅供演示。如果问”你好”和”什么是亚健康管理系统&quot;等会回复特定的话，问其他就在&quot;保持健康~&quot;,&quot;锻炼身体！&quot;, &quot;饮食规律~&quot;中随机回复一个。</p><p>最初是下面左图所示，右图是后来美化了一下。</p><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/24.png?raw=true"></p><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/25.png?raw=true"></p><p>5.一些其他的小细节</p><p>1）头部username显示</p><p>最初：</p><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/26.png?raw=true"></p><p>改动后：</p><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/27.png?raw=true"><br>显示具体的用户名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template #title&gt;</span><br><span class="line">    &lt;el-avatar style=&quot;background-color: cornflowerblue;color: black&quot;&gt;&#123;&#123; user.username &#125;&#125;&lt;/el-avatar&gt;</span><br><span class="line">  &lt;/template&gt;</span><br></pre></td></tr></table></figure><p>2）管理员和普通用户权限，管理员可以看到用户管理的页面，这里是在数据库增加了role(int类型，1表示管理员0表示普通用户),</p><p>在<code>Aside.vue</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> &lt;el-menu-item index=&quot;7&quot; v-if=&quot;user.role===1&quot; @click=&quot;this.$router.push(&#x27;/user_manage&#x27;)&quot;&gt;</span><br><span class="line">  &lt;el-icon&gt;&lt;List /&gt;&lt;/el-icon&gt;</span><br><span class="line">  &lt;span&gt;用户管理&lt;/span&gt;</span><br><span class="line">&lt;/el-menu-item&gt;</span><br></pre></td></tr></table></figure><p><code>v-if=&quot;user.role===1&quot; </code>这样实现的</p><p>在<code>User_manage.vue</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-table-column label=&quot;角色&quot;&gt;</span><br><span class="line">    &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">      &lt;span v-if=&quot;scope.row.role===1&quot;&gt;管理员&lt;/span&gt;</span><br><span class="line">      &lt;span v-if=&quot;scope.row.role===0&quot;&gt;普通用户&lt;/span&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">&lt;/el-table-column&gt;</span><br></pre></td></tr></table></figure><p>实现两者的显示。</p><p>3）未登录状况下强制跳转登录（这里是对我负责的登录功能的优化）</p><p>在<code>index.js</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 添加一个 beforeEach 路由守卫,这里用于实现未登录情况下强制跳转/login</span><br><span class="line">router.beforeEach((to, from, next) =&gt; &#123;</span><br><span class="line">  // 检查 sessionStorage 中是否已经有 user</span><br><span class="line">  let user = sessionStorage.getItem(&#x27;user&#x27;);</span><br><span class="line"></span><br><span class="line">  // 如果没有 user 且访问的不是登录界面，那么强制跳转至登录页面</span><br><span class="line">  if (!user &amp;&amp; to.path !== &#x27;/login&#x27;&amp;&amp; to.path !== &#x27;/register&#x27;) &#123;</span><br><span class="line">    return next(&#123; path: &#x27;/login&#x27; &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  // 否则就继续进行本次路由</span><br><span class="line">  next();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>6.sql文件的整理上传，详见gitee<br><a href="https://gitee.com/AIJavaGroup/project/blob/master/health_management.sql">health_management.sql</a></p><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/28.png?raw=true"></p><p>7.README，详见gitee<br><a href="https://gitee.com/AIJavaGroup/project/blob/master/README.md">README.md</a></p><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/29.png?raw=true"></p><p><strong>五.总结展望</strong></p><!-- 访问[Activity -Gitee](https://gitee.com/organizations/AIJavaGroup/events)可以看到我们自从创建组织后的各种活动（创建仓库，不断试错，一次次更新修复）。git clone https://gitee.com/AIJavaGroup/project.git后可以在本地IDE上看到更新记录及详细的文件变动信息。![](https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/30.png?raw=true)点击每个文件的git提交人可以看到每行代码的提交人及提交时间。![](https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/6.18/31.png?raw=true) --><p>这次作业前期准备断断续续用了快一个月，后面写项目差不多两周左右。使用多一点框架会在正式开发中快很多，但是想要知道怎么用还是要学不少知识的。我们每个人都写了前端后端，如果你看源码会发现4个人不同的代码风格。总的来说，这次大作业还是学到了很多东西，见证了项目一点点搭建起来，培养团队合作能力，也真的加强了自信”我们可以自己写原创项目”。</p><p>展望的话，我们以后可以实现更完整一点的项目，比如文件上传，更丰富的管理员功能，验证码，服务器部署等等。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;  Java与面向对象设计的大作业，实验报告docx用pandoc转成了md。&lt;/p&gt;</summary>
    
    
    
    <category term="web开发" scheme="https://strangersinsist.github.io/categories/web%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="springboot" scheme="https://strangersinsist.github.io/tags/springboot/"/>
    
    <category term="web" scheme="https://strangersinsist.github.io/tags/web/"/>
    
    <category term="vue" scheme="https://strangersinsist.github.io/tags/vue/"/>
    
    <category term="mysql" scheme="https://strangersinsist.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>W4terCTF2024 writeup</title>
    <link href="https://strangersinsist.github.io/2024/05/03/writeup/"/>
    <id>https://strangersinsist.github.io/2024/05/03/writeup/</id>
    <published>2024-05-03T06:39:16.405Z</published>
    <updated>2024-09-25T13:56:19.800Z</updated>
    
    <content type="html"><![CDATA[<p>纯小白，做出的题很少</p><p><del>图片很糊但就先这样吧</del><br>队友：<a href="https://github.com/kuku172">https://github.com/kuku172</a><br>放个友链<a href="https://lst4r-max.github.io/">Lst4r-max.github.io</a></p><span id="more"></span><h5 id="Spam-2024"><a href="#Spam-2024" class="headerlink" title="Spam 2024"></a>Spam 2024</h5><p>先找垃圾邮件，搜了很多东西后找到<a href="https://www.spammimic.com/encode.cgi">spammimic - encoded</a>，然后第一步解码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">59,6f,75,20,6c,69,6b,65,20,65,6d,6f,6a,69,73,2c,20,64,6f,6e,27,74,20,79,6f,75,3f,0a,0a,01f643,01f4b5,01f33f,01f3a4,01f6aa,01f30f,01f40e,01f94b,01f6ab,01f606,2705,01f606,01f6b0,01f4c2,01f32a,263a,01f6e9,01f30f,01f4c2,01f579,01f993,01f405,01f375,01f388,01f600,01f504,01f6ab,01f3a4,01f993,2705,01f4ee,01f3a4,01f385,01f34e,01f643,01f309,01f383,01f34d,01f374,01f463,01f6b9,01f923,01f418,01f3f9,263a,01f463,01f4a7,01f463,01f993,01f33f,2328,01f32a,01f30f,01f643,01f375,2753,2602,01f309,01f606,01f3f9,01f375,01f4a7,01f385,01f449,01f30a,01f6b9,01f6aa,01f374,01f60e,01f383,01f32a,01f643,01f441,01f94b,01f451,01f4a7,01f418,01f3a4,01f94b,01f418,01f6e9,01f923,01f309,01f6e9,23e9,01f60d,2753,01f418,01f621,2600,01f60d,01f643,01f601,01f600,01f601,01f6ab,01f4c2,2705,2603,01f6ab,01f60e,01f52a,01f451,01f600,01f579,01f6ab,01f60d,01f32a,01f4c2,01f44c,01f34d,01f44c,01f993,01f590,01f923,01f60e,01f3ce,01f34d,01f3f9,01f34c,01f34d,01f3a4,2600,01f3f9,01f388,01f6b0,01f4a7,2600,2709,01f3f9,01f34d,01f993,01f385,01f374,2602,23e9,01f6aa,01f40d,263a,01f418,01f607,01f621,01f375,01f30f,01f993,01f375,01f6e9,01f4c2,01f44c,01f3f9,01f5d2,01f5d2,0a,0a,42,74,77,2c,20,74,68,65,20,6b,65,79,20,69,73,20,22,4b,45,59,22</span><br></pre></td></tr></table></figure><p>前后是ACSII，中间是emoji的unicode。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">hex_to_ascii</span>(<span class="params">hex_string</span>):</span><br><span class="line">    bytes_object = <span class="built_in">bytes</span>.fromhex(hex_string)</span><br><span class="line">    ascii_string = bytes_object.decode(<span class="string">&quot;ASCII&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> ascii_string</span><br><span class="line"></span><br><span class="line">hex_string1 = <span class="string">&quot;59,6f,75,20,6c,69,6b,65,20,65,6d,6f,6a,69,73,2c,20,64,6f,6e,27,74,20,79,6f,75,3f,0a,0a&quot;</span></span><br><span class="line">hex_string1 = hex_string1.replace(<span class="string">&#x27;,&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(hex_to_ascii(hex_string1)) </span><br><span class="line"></span><br><span class="line">hex_string2 = <span class="string">&quot;0a,0a,42,74,77,2c,20,74,68,65,20,6b,65,79,20,69,73,20,22,4b,45,59,22&quot;</span></span><br><span class="line">hex_string2 = hex_string2.replace(<span class="string">&#x27;,&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(hex_to_ascii(hex_string2)) </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">unicode_string =<span class="string">&quot;01f643,01f4b5,01f33f,01f3a4,01f6aa,01f30f,01f40e,01f94b,01f6ab,01f606,2705,01f606,01f6b0,01f4c2,01f32a,263a,01f6e9,01f30f,01f4c2,01f579,01f993,01f405,01f375,01f388,01f600,01f504,01f6ab,01f3a4,01f993,2705,01f4ee,01f3a4,01f385,01f34e,01f643,01f309,01f383,01f34d,01f374,01f463,01f6b9,01f923,01f418,01f3f9,263a,01f463,01f4a7,01f463,01f993,01f33f,2328,01f32a,01f30f,01f643,01f375,2753,2602,01f309,01f606,01f3f9,01f375,01f4a7,01f385,01f449,01f30a,01f6b9,01f6aa,01f374,01f60e,01f383,01f32a,01f643,01f441,01f94b,01f451,01f4a7,01f418,01f3a4,01f94b,01f418,01f6e9,01f923,01f309,01f6e9,23e9,01f60d,2753,01f418,01f621,2600,01f60d,01f643,01f601,01f600,01f601,01f6ab,01f4c2,2705,2603,01f6ab,01f60e,01f52a,01f451,01f600,01f579,01f6ab,01f60d,01f32a,01f4c2,01f44c,01f34d,01f44c,01f993,01f590,01f923,01f60e,01f3ce,01f34d,01f3f9,01f34c,01f34d,01f3a4,2600,01f3f9,01f388,01f6b0,01f4a7,2600,2709,01f3f9,01f34d,01f993,01f385,01f374,2602,23e9,01f6aa,01f40d,263a,01f418,01f607,01f621,01f375,01f30f,01f993,01f375,01f6e9,01f4c2,01f44c,01f3f9,01f5d2,01f5d2&quot;</span></span><br><span class="line">unicode_list = unicode_string.split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">emoji_string = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">chr</span>(<span class="built_in">int</span>(<span class="string">&#x27;0x&#x27;</span> + uni, <span class="number">16</span>)) <span class="keyword">for</span> uni <span class="keyword">in</span> unicode_list)</span><br><span class="line"><span class="built_in">print</span>(emoji_string)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">You like emojis, don&#x27;t you?</span><br><span class="line">Btw, the key is &quot;KEY&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🙃💵🌿🎤🚪🌏🐎🥋🚫😆✅😆🚰📂🌪☺🛩🌏📂🕹🦓🐅🍵🎈😀🔄🚫🎤🦓✅📮🎤🎅🍎🙃🌉🎃🍍🍴👣🚹🤣🐘🏹☺👣💧👣🦓🌿⌨🌪🌏🙃🍵❓☂🌉😆🏹🍵💧🎅👉🌊🚹🚪🍴😎🎃🌪🙃👁🥋👑💧🐘🎤🥋🐘🛩🤣🌉🛩⏩😍❓🐘😡☀😍🙃😁😀😁🚫📂✅☃🚫😎🔪👑😀🕹🚫😍🌪📂👌🍍👌🦓🖐🤣😎🏎🍍🏹🍌🍍🎤☀🏹🎈🚰💧☀✉🏹🍍🦓🎅🍴☂⏩🚪🐍☺🐘😇😡🍵🌏🦓🍵🛩📂👌🏹🗒🗒</span><br></pre></td></tr></table></figure><p>找到下面的工具：<br><a href="https://aghorler.github.io/emoji-aes/#decrypt">emoji-aes</a></p><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/5.3/image-3.png?raw=true" alt="alt text"><br>发现密钥的问题，试了KEY的unicode, ascii,等等，🔑的unicode，用KEY生成垃圾邮件，都失败了。<br>找到正确的密钥🔑。<br>解密结果是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0x???? ⊕ dxBUQVJndGJbbGByE3tGUW57VxV0bH9db3FSe2YFUndUexVUYWl/QW1FAW1/bW57EhQSEF0=</span><br></pre></td></tr></table></figure><p>这个字符串应该是被异或操作过的结果，找到正确的16进制数与其进行异或就能得到原始信息。下面是暴力破解来找出可能的结果。<br>异或运算的一个特点是自反的，就是用同一个键进行两次异或操作就可以恢复原始信息。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">cipher_text = base64.b64decode(<span class="string">&#x27;dxBUQVJndGJbbGByE3tGUW57VxV0bH9db3FSe2YFUndUexVUYWl/QW1FAW1/bW57EhQSEF0=&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> xor_key <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0x10000</span>):  <span class="comment"># 试验所有 0x0000 到 0xffff 的可能key</span></span><br><span class="line">    plain_text = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">chr</span>(b ^ (xor_key &amp; <span class="number">0xff</span>)) <span class="keyword">for</span> b <span class="keyword">in</span> cipher_text)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;0x<span class="subst">&#123;xor_key:04x&#125;</span>: <span class="subst">&#123;plain_text&#125;</span>&#x27;</span>) </span><br></pre></td></tr></table></figure><p>第一次的代码有点问题，遍历输出只发现了一个很像的数据。<br><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/5.3/image-5.png?raw=true" alt="alt text"><br>分析了下奇数位和偶数位异或的值是不一样的，0x？？？？看得出来是个四位十六进制，这个奇数位看起来基本是对的。<br>改一下代码，然后一样遍历枚举，就找到flag了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">cipher_text = base64.b64decode(<span class="string">&#x27;dxBUQVJndGJbbGByE3tGUW57VxV0bH9db3FSe2YFUndUexVUYWl/QW1FAW1/bW57EhQSEF0=&#x27;</span>)</span><br><span class="line">xor_key_even = <span class="number">0xfe20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> xor_key_odd <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0x10000</span>):    </span><br><span class="line">    plain_text = <span class="string">&quot;&quot;</span>.join(<span class="built_in">chr</span>(cipher_text[i] ^ ((xor_key_odd <span class="keyword">if</span> i % <span class="number">2</span> <span class="keyword">else</span> xor_key_even) &amp; <span class="number">0xff</span>)) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(cipher_text)))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;key_odd: 0x<span class="subst">&#123;xor_key_odd:04x&#125;</span>, deciphered message: <span class="subst">&#123;plain_text&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/5.3/image-6.png?raw=true" alt="alt text"></p><h5 id="GZ-GPT"><a href="#GZ-GPT" class="headerlink" title="GZ GPT"></a>GZ GPT</h5><p>nc：<br><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/5.3/image-7.png?raw=true" alt="alt text"><br>乱码解决方案：<a href="http://www.mytju.com/classcode/tools/messyCodeRecover.asp">乱码恢复</a><br><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/5.3/image-8.png?raw=true" alt="alt text"><br><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/5.3/image-9.png?raw=true" alt="alt text"></p><p>手动改乱码比较慢，就使用python的pwn库，并导入codecs模块（基础编解码功能）进行无限交互直至远程服务器终止。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"></span><br><span class="line">conn = remote(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">50338</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    data = conn.recv().decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    gbk_data = data.encode(<span class="string">&#x27;gbk&#x27;</span>)   </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;接收到的数据：<span class="subst">&#123;data&#125;</span>&quot;</span>)</span><br><span class="line">    conn.interactive()    </span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><p><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/5.3/image-10.png?raw=true" alt="alt text"></p><p>看提示，应该是每次返回的有隐藏数据（想到去年的shadow，感觉这次输出光标也有奇怪的闪动）。<br>确定了下每次输出后都有隐藏信息，这题是考隐写的。<br>把终端输出复制过来看到vscode的提示：<br><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/5.3/image-12.png?raw=true" alt="alt text"></p><p>然后去查一下锁定类型：零宽度字符隐写，并找到工具<a href="https://330k.github.io/misc_tools/unicode_steganography.html">Unicode Steganography with Zero-Width Characters</a>。<br>用笨蛋方法一句句复制粘贴上去解码的，把每次的Hidden Text粘贴上去就得到完整的flag了。</p><h4 id="broken-mp4"><a href="#broken-mp4" class="headerlink" title="broken.mp4"></a>broken.mp4</h4><p>解压后一个视频是完好的，打开看看，很明显的提示了，明显是在微信打开的嘛，去微信上搜搜标题，很好找到这篇文章<a href="https://mp.weixin.qq.com/s/ODVbDRMhOGvk-dWN09uk1Q">链接</a><br>然后去下载公众号上说的那个软件恢复一下就OK了<br><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/5.3/image-1.jpg?raw=true" alt="alt text"></p><h4 id="Sign-In"><a href="#Sign-In" class="headerlink" title="Sign In"></a>Sign In</h4><p>四道签到题的最后一个（晚上公选课无聊乱翻榜单看到的）<br><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/5.3/image-2.png?raw=true" alt="alt text"></p><h4 id="Remember-It-0"><a href="#Remember-It-0" class="headerlink" title="Remember It 0"></a>Remember It 0</h4><p>第一次做pwn题，随便试试，签到题的话一般跟着做就行（主要是懒得想其他方法了）<br>看源码，笨蛋方法没问题，就一步步敲的<br><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/5.3/image-4.png?raw=true" alt="alt text"><br>然后cat flag<br><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/5.3/image-11.png?raw=true" alt="alt text"></p><h4 id="Shuffle-Puts"><a href="#Shuffle-Puts" class="headerlink" title="Shuffle Puts"></a>Shuffle Puts</h4><p>签到题，嗯，打开IDA直接看strings<br><img src="https://github.com/strangersinsist/strangersinsist.github.io/blob/master/source/5.3/image-13.png?raw=true" alt="alt text"></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>小白第一次玩CTF还是挺开心的，感觉算是入了门。（一周前容器实例还不会开netcat还不会用的）。<br>如果这周事情不那么多就好了，这周太忙了有效做题时间不多，很多方向都没学，基本上就是在做Misc了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;纯小白，做出的题很少&lt;/p&gt;
&lt;p&gt;&lt;del&gt;图片很糊但就先这样吧&lt;/del&gt;&lt;br&gt;队友：&lt;a href=&quot;https://github.com/kuku172&quot;&gt;https://github.com/kuku172&lt;/a&gt;&lt;br&gt;放个友链&lt;a href=&quot;https://lst4r-max.github.io/&quot;&gt;Lst4r-max.github.io&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://strangersinsist.github.io/categories/CTF/"/>
    
    
    <category term="ctf" scheme="https://strangersinsist.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://strangersinsist.github.io/2023/12/13/hello-world/"/>
    <id>https://strangersinsist.github.io/2023/12/13/hello-world/</id>
    <published>2023-12-13T14:04:00.148Z</published>
    <updated>2024-09-18T12:54:08.080Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
